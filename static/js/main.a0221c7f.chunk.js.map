{"version":3,"sources":["components/ExpandButton.tsx","components/Location.tsx","components/SectionDivider.tsx","axes.ts","lib.js","helpers.ts","getActivity.ts","allVariants.ts","components/Timeline.tsx","cumulatives.ts","filter.ts","Qprom.ts","Option.ts","App.tsx","serviceWorker.js","index.js"],"names":["ExpandButton","_ref","isExpanded","onClick","react_default","a","createElement","className","toggleText","Location","isTruncated","location","address","city","state","display_name","SectionDivider","axes","updateAxes","window","innerWidth","innerHeight","major","minor","addEventListener","geocoder","geocoder_","isOrIsAncestorOf","isOrIsAncestorOf_","EasyFit","EasyFit_","capitalizeFirstLetter","word","slice","toUpperCase","toLowerCase","monthString","index","getTime","date","getHours","getMinutes","getDurationFromSecs","millis","hours","Math","floor","minutes","seconds","zeroPad","value","minWidth","string","length","repeat","reverseGeocode","lat","lon","Promise","resolve","reject","reverse","end","err","result","console","log","getOffsetIndex","records","offsetTime","cursorMil","i","timestamp","sum","numbers","reduce","total","n","fractionalMinuteToPaceString","isNaN","Infinity","fractionalPart","metersToMiles","meters","getFirstRecordTimestampOrActivityStartTime","activity","start_time","getLastRecordTimestampOrActivityEndTime","end_time","getActivity","rawFile","sport","rawActivity","sessions","map","getSession","laps","session","flat","forEach","record","total_distance","total_elapsed_time","Object","objectSpread","cadence","convertRpmToSpmIfRunning","pace","speed","KPH_TO_MPH","calculatePace","rawSession","getLap","lap","rawLap","Attribute","enum_","ALL_ATTRIBUTES","values","filter","k","getRecordAttribute","attribute","HeartRate","heart_rate","Cadence","Pace","cloneSession","original","cloneLap","cloneRecord","Date","cloneDate","Timeline","offsetIndex","viewedDuration","shouldConvertRpmToSpm","getAttributeDisplayNameAndUnits","isAttributeIllegal","isAnyAttributeIllegal","ReactKonva","width","height","timelineHeight","fill","duration","endTime","endIndex","findIndex","r","sliceDuration","deltaTime","key","ILLEGAL_ATTRIBUTE_RECORD_DOT_FILL","ILLEGAL_OTHER_ATTRIBUTE_RECORD_DOT_FILL","ACTIVE_RECORD_DOT_FILL","INACTIVE_RECORD_DOT_FILL","x","recordDotRadius","y","radius","getCumulatives","originalActivity","cloneActivity","totalDuration","totalDistance","_session$records","toArray","first","rest","distance","deltaDistance","averagePace","milliseconds","miles","getAveragePace","heartRates","averageHeartRate","BoundType","Filter","config","classCallCheck","this","pendingHeartRateMin","pendingHeartRateMax","pendingCadenceMin","pendingCadenceMax","pendingSpeedMin","pendingSpeedMax","heartRate","createClass","boundType","beginning","pendingKeyBeginningAttribute","ending","Min","Max","pendingKeyEndingFromBoundType","pendingKeyFromAttributeAndBoundType","sync","isAttributeLegal","_this$getBounds","getBounds","_this$getBounds2","slicedToArray","min","max","_this","some","oldBounds","pendingMin","pendingMax","parsedMin","strictParseInt","parsedMax","test","parseInt","NaN","PromStatus","Option","matcher","isNone","none","isNone_","mapper","match","defaultValue","create","prototype","NONE","Qprom","cb","shouldListen","possibleConstructorReturn","getPrototypeOf","call","status","error","updateListeners","Pending","get","assertThisInitialized","val","Fulfilled","onUpdate","Rejected","prom","then","catch","push","pending","fulfilled","rejected","App","props","fileRef","minimapRef","onChangePendingHeartRateMin","onChangePendingHeartRateMax","onChangePendingCadenceMin","onChangePendingCadenceMax","onChangePendingSpeedMin","onChangePendingSpeedMax","mouseDownTarget","React","createRef","forceUpdate","bind","handleUpload","toggleIsStartLocationTruncated","toggleIsEndLocationTruncated","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","onSyncPendingBounds","e","onChangePendingBound","_this2","type","accept","onChange","ref","style","display","startLocation","isStartLocationTruncated","endLocation","isEndLocationTruncated","cumulatives","startTime","getMonth","getDate","getDay","getFullYear","Fragment","ExpandButton_ExpandButton","roundTo","SectionDivider_SectionDivider","Timeline_Timeline","pattern","onBlur","_this3","files","current","file","reader","FileReader","buffer","force","speedUnit","lengthUnit","temperatureUnit","elapsedRecordField","mode","parse","data","firstSession","getSessionRecords","getActivityRecords","endRecord","setState","fromPromise","start_position_lat","start_position_long","position_lat","position_long","STARTING_VIEWED_DURATION","timelineScroll","readAsArrayBuffer","event","onPointerDown","target","clientX","clientY","touch","touches","initialPointerLocation","initialOffsetTime","onPointerUp","onPointerMove","isCursorDragged","rect","getBoundingClientRect","rawCompletionFactor","left","clampedCompletionFactor","start","factor","startMil","endMil","lerpDate","isTimelineDragged","activityState","_ref3","widthFactor","newTimeMillis","clampedMillis","newTime","newIndex","tagName","setPendingBound","syncPendingBoundsWithActualBounds","Component","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPAGe,SAASA,EAATC,GAMQ,IALrBC,EAKqBD,EALrBC,WACAC,EAIqBF,EAJrBE,QAKA,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeJ,QAASA,GAM9C,SAAoBD,GAClB,OAAIA,EACK,eAEA,eATJM,CAAWN,ICPH,SAASO,EAATR,GAMP,IALNS,EAKMT,EALNS,YACAC,EAIMV,EAJNU,SAKA,OAAKD,EAGIC,EAASC,QAAQC,KAAO,KAAOF,EAASC,QAAQE,MAFhDH,EAASI,mBCVL,SAASC,IACtB,OAAOZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCCJlBU,EAAa,GACJA,IAOf,SAASC,IACHC,OAAOC,WAAaD,OAAOE,aAC7BJ,EAAKK,MAAQH,OAAOC,WACpBH,EAAKM,MAAQJ,OAAOE,cAEpBJ,EAAKK,MAAQH,OAAOE,YACpBJ,EAAKM,MAAQJ,OAAOC,YAXxBF,IAEAC,OAAOK,iBAAiB,SAAUN,GAClCC,OAAOK,iBAAiB,oBAAqBN,0DCFhCO,EAAWC,IACXC,EAAmBC,IACnBC,EAAUC,ICOhB,SAASC,EAAsBC,GACpC,OAAOA,EAAKC,MAAM,EAAG,GAAGC,cAAgBF,EAAKC,MAAM,GAAGE,cAejD,SAASC,EAAYC,GAC1B,MAAO,CACL,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACAA,GAGG,SAASC,EAAQC,GACtB,OAAOA,EAAKC,WAAa,IAAMD,EAAKE,aAO/B,SAASC,EAAoBC,GAClC,IAAMC,EAAQC,KAAKC,MAAMH,EAAS,MAC5BI,EAAUF,KAAKC,MAAOH,EAAS,KAAQ,IACvCK,EAAUH,KAAKC,MAAMH,EAAS,IACpC,OACEM,EAAQL,EAAO,GAAK,IAAMK,EAAQF,EAAS,GAAK,IAAME,EAAQD,EAAS,GAIpE,SAASC,EAAQC,EAAYC,GAClC,IAAMC,EAAS,GAAKF,EACpB,OAAIE,EAAOC,OAASF,EAEX,IAAIG,OADKH,EAAWC,EAAOC,QACLD,EAEtBA,EAIJ,SAASG,EAAeC,EAAaC,GAC1C,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3BnC,IACGoC,QAAQJ,EAAKD,GACbM,IAAI,SAACC,EAAUC,GACVD,EACFH,EAAOG,IAEPE,QAAQC,IAAIF,GACZL,EAAQK,QAaX,SAASG,EAAeC,EAAmBC,GAGhD,IAFA,IAAMC,EAAYD,EAAW/B,UACrBe,EAAWe,EAAXf,OACCkB,EAAI,EAAGA,EAAIlB,EAAQkB,IAAK,CAE/B,GADsBH,EAAQG,GAAtBC,UACMlC,WAAagC,EACzB,OAAOC,EAGX,OAAOlB,EAAS,EAkBX,SAASoB,EAAIC,GAClB,OAAOA,EAAQC,OAAO,SAACC,EAAOC,GAAR,OAAcD,EAAQC,GAAG,GAG1C,SAASC,EAA6B/B,GAC3C,GAAIgC,MAAMhC,IAAYA,IAAYiC,KAAYjC,KAAaiC,IACzD,MAAO,aAEP,IAAMC,EAAiBlC,EAAUF,KAAKC,MAAMC,GAC5C,OACEF,KAAKC,MAAMC,GAAW,IAAME,EAAQJ,KAAKC,MAAM,GAAKmC,GAAiB,GASpE,SAASC,EAAcC,GAC5B,OAAOA,EAAS,QAiBX,SAASC,EACdC,GAEA,OAAgC,IAA5BA,EAASjB,QAAQf,OACZgC,EAASC,WAETD,EAASjB,QAAQ,GAAGI,UAIxB,SAASe,EACdF,GAEA,OAAgC,IAA5BA,EAASjB,QAAQf,OACZgC,EAASG,SAETH,EAASjB,QAAQiB,EAASjB,QAAQf,OAAS,GAAGmB,UC5KlD,SAASiB,EAAYC,GAC1B,IAAMC,EAAgBD,EAAQC,MAAMA,MAClBC,EAAgBF,EAA1BL,SACFQ,EAAsBD,EAAYC,SAASC,IAAIC,GAC/CC,EAAcH,EAASC,IAAI,SAACG,GAAD,OAAaA,EAAQD,OAAME,OACtD9B,EAAoByB,EAASC,IAAI,SAACG,GAAD,OAAaA,EAAQ7B,UAAS8B,OACrE9B,EAAQ+B,QAAQ,SAACC,EAAQ7B,GACvB6B,EAAO/D,MAAQkC,IAEjB,IAAM8B,EAAiB5B,EAAIoB,EAASC,IAAI,SAACG,GAAD,OAAaA,EAAQI,kBACvDC,EAAqB7B,EACzBoB,EAASC,IAAI,SAACG,GAAD,OAAaA,EAAQK,sBAE9BhB,EAAalB,EAAQ,GAAGI,UACxBgB,EAAWpB,EAAQA,EAAQf,OAAS,GAAGmB,UAEvCa,EAAQkB,OAAAC,EAAA,EAAAD,CAAA,GACTX,EADS,CAEZD,QACAE,WACAG,OACA5B,UACAiC,iBACAC,qBACAhB,aACAE,aAIF,OAoBF,SAAkCH,GACT,YAAnBA,EAASM,OACXN,EAASjB,QAAQ+B,QAAQ,SAACC,GACxBA,EAAOK,SAAW,IAzBtBC,CAAyBrB,GA8B3B,SAAuBA,GACrBA,EAASjB,QAAQ+B,QAAQ,SAACC,GACxBA,EAAOO,KAAO,IAAMP,EAAOQ,MAAQC,KA/BrCC,CAAczB,GACPA,EAGT,SAASU,EAAWgB,GAClB,IAAMd,EAAOM,OAAAC,EAAA,EAAAD,CAAA,GAAQQ,GAKrB,OAJAd,EAAQD,KAAOC,EAAQD,KAAKF,IAAIkB,GAChCf,EAAQ7B,QAAU6B,EAAQD,KAAKF,IAAI,SAACmB,GAAD,OAAcA,EAAI7C,UAAS8B,OAC9DD,EAAQX,WAAaW,EAAQ7B,QAAQ,GAAGI,UACxCyB,EAAQT,SAAWS,EAAQ7B,QAAQ6B,EAAQ7B,QAAQf,OAAS,GAAGmB,UACxDyB,EAGT,SAASe,EAAOE,GACd,IAAMD,EAAGV,OAAAC,EAAA,EAAAD,CAAA,GAAQW,GAIjB,OAHAD,EAAI7C,QAAU6C,EAAI7C,QAAQnC,QAC1BgF,EAAI3B,WAAa2B,EAAI7C,QAAQ,GAAGI,UAChCyC,EAAIzB,SAAWyB,EAAI7C,QAAQ6C,EAAI7C,QAAQf,OAAS,GAAGmB,UAC5CyC,EAgBT,IA+EYE,EA/ENN,EAAa,kBA+EPM,wFAKL,ICrJgCC,EDqJ1BC,GCrJ0BD,EDqJcD,ECpJ5CZ,OAAOe,OAAOF,GAAOG,OAAO,SAACC,GAAD,MAAO,kBAAoBA,KDsJzD,SAASC,EACdrB,EACAsB,GAEA,OAAQA,GACN,KAAKP,EAAUQ,UACb,OAAOvB,EAAOwB,WAChB,KAAKT,EAAUU,QACb,OAAOzB,EAAOK,QAChB,KAAKU,EAAUW,KACb,OAAO1B,EAAOO,MAyBpB,SAASoB,EAAaC,GACpB,IAAMhC,EAAOgC,EAAShC,KAAKF,IAAImC,GACzB7D,EAAU4B,EAAKF,IAAI,SAACmB,GAAD,OAAcA,EAAI7C,UAAS8B,OACpD,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GAAKyB,EAAZ,CAAsBhC,OAAM5B,YAG9B,SAAS6D,EAASD,GAChB,IAAM5D,EAAU4D,EAAS5D,QAAQ0B,IAAIoC,GACrC,OAAO3B,OAAAC,EAAA,EAAAD,CAAA,GAAKyB,EAAZ,CAAsB5D,YAGxB,SAAS8D,EAAYF,GACnB,IAAMxD,EAIR,SAAmBwD,GACjB,OAAO,IAAIG,KAAKH,EAAS1F,WALP8F,CAAUJ,EAASxD,WACrC,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GAAKyB,EAAZ,CAAsBxD,cExLT,SAAS6D,EAATpI,GAOe,IAN5ByH,EAM4BzH,EAN5ByH,UACAtD,EAK4BnE,EAL5BmE,QACAkE,EAI4BrI,EAJ5BqI,YACAC,EAG4BtI,EAH5BsI,eACAhB,EAE4BtH,EAF5BsH,OACAiB,EAC4BvI,EAD5BuI,sBAEA,OACEpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBF4Id,SACLmH,EACAc,GAEA,OAAQd,GACN,KAAKP,EAAUQ,UACb,MAAO,mBACT,KAAKR,EAAUU,QACb,MAAO,YAAcW,EAAwB,QAAU,SACzD,KAAKrB,EAAUW,KACb,MAAO,iBErJJW,CAAgCf,EAAWc,GAC1C,WACA,IAAMpC,EAAShC,EAAQkE,GACvB,OAAIlC,EAEAhG,EAAAC,EAAAC,cAAA,QACEC,UACE,yCAEMgH,EAAOmB,mBAAmBhB,EAAWtB,GAChC,UACEmB,EAAOoB,sBAAsBvC,GAC/B,eAEA,UAKZ,OACEsB,IAAcP,EAAUW,KACrBhD,EACE2C,EAAmBrB,EAAQsB,IAE7BD,EAAmBrB,EAAQsB,KAI9B,KA3BT,IA+BJtH,EAAAC,EAAAC,cAACsI,EAAA,MAAD,CAAOC,MAAO1H,OAAOC,WAAY0H,OAAQC,MACvC3I,EAAAC,EAAAC,cAACsI,EAAA,MAAD,CAAOC,MAAO1H,OAAOC,WAAY0H,OAAQC,MACvC3I,EAAAC,EAAAC,cAACsI,EAAA,KAAD,CACEI,KAAK,QACLH,MAAO1H,OAAOC,WACd0H,OAAQC,OHkFb,SAAuB3E,EAAmB6E,GAC/C,GAAuB,IAAnB7E,EAAQf,OACV,MAAO,GAEP,IAAM6F,EAAU9E,EAAQ,GAAGI,UAAUlC,UAAY2G,EAC3CE,EAAW/E,EAAQgF,UAAU,SAACC,GAAD,OAAOA,EAAE7E,UAAUlC,UAAY4G,IAClE,OAAkB,IAAdC,EACK/E,EAAQnC,QAERmC,EAAQnC,MAAM,EAAGkH,GGzFnBG,CAAclF,EAAQnC,MAAMqG,GAAcC,GAAgBzC,IACzD,SAACM,EAAQ7B,GACP,IAAMgF,EACJnD,EAAO5B,UAAUlC,UACjB8B,EAAQkE,GAAa9D,UAAUlC,UACjC,OACElC,EAAAC,EAAAC,cAACsI,EAAA,OAAD,CACEY,IAAKpD,EAAO/D,MACZ2G,KACMzB,EAAOmB,mBAAmBhB,EAAWtB,GAChCqD,GACElC,EAAOoB,sBAAsBvC,GAC/BsD,GAEM,IAANnF,EACHoF,GACAC,GAGRC,EACE1I,OAAOC,YAAcmI,EAAYhB,GACjCuB,KAEFC,EACEhB,KACAA,MACGtB,EAAmBrB,EAAQsB,GAAa,KAE7CsC,OAAQF,YAoB1B,IAAMH,GAAyB,OACzBC,GAA2B,OAC3BH,GAAoC,MACpCC,GAA0C,SAEhD,SAASX,KACP,MAAO,GAAM9H,EAAKM,MAGpB,SAASuI,KACP,MAAO,KAAQ7I,EAAKK,uCChHf,SAAS2I,GACdC,EACA3C,GAEA,IAAMlC,EHoKD,SAAuB2C,GAC5B,IAAMnC,EAAsBmC,EAASnC,SAASC,IAAIiC,GAC5C/B,EAAcH,EAASC,IAAI,SAACG,GAAD,OAAaA,EAAQD,OAAME,OACtD9B,EAAoByB,EAASC,IAAI,SAACG,GAAD,OAAaA,EAAQ7B,UAAS8B,OACrE,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GAAKyB,EAAZ,CAAsBnC,WAAUG,OAAM5B,YGxKrB+F,CAAcD,GAE3BE,EAAgB,EAChBC,EAAgB,EAEpBhF,EAASQ,SAASM,QAAQ,SAACF,GACzB,GAAIA,EAAQ7B,QAAQf,OAAS,EAAG,KAAAiH,EAAA/D,OAAAgE,GAAA,EAAAhE,CACLN,EAAQ7B,SAA1BoG,EADuBF,EAAA,GACbG,EADaH,EAAArI,MAAA,GAE1BuC,EAAYgG,EAAMhG,UAClBkG,EAAWF,EAAME,SACrBD,EAAKtE,QAAQ,SAACC,GACZ,IAAKmB,EAAOoB,sBAAsBvC,GAAS,CACzC,IAAMmD,EAAYnD,EAAO5B,UAAUlC,UAAYkC,EAAUlC,UACnDqI,EAAgBvE,EAAOsE,SAAWA,EACxCN,GAAiBb,EACjBc,GAAiBM,EAGnBnG,EAAY4B,EAAO5B,UACnBkG,EAAWtE,EAAOsE,cAQxB,IJ+FsBhG,EI/FhBkG,EAWR,SAAwBzF,EAAgB0F,GACtC,IAAMC,EAAQ5F,EAAcC,GAE5B,OADgB0F,EAAe,GACdC,EAdGC,CAAeV,EAFnCD,GAAiB,MAGXY,EAAa3F,EAASjB,QAAQ0B,IAAI,SAACM,GAAD,OAAYA,EAAOwB,aACrDqD,EJ8FCxG,EADeC,EI7FWsG,GJ8FXtG,EAAQrB,OI7F9B,MAAO,CACL+G,gBACAC,gBACAO,cACAK,wBC1CQC,yEAKL,IAAMC,GAAb,WAYE,SAAAA,EAAYC,GAAuB7E,OAAA8E,EAAA,EAAA9E,CAAA+E,KAAAH,GAAAG,KAX5BC,yBAW2B,EAAAD,KAV3BE,yBAU2B,EAAAF,KAT3BG,uBAS2B,EAAAH,KAR3BI,uBAQ2B,EAAAJ,KAP3BK,qBAO2B,EAAAL,KAN3BM,qBAM2B,EAAAN,KAJ1BO,eAI0B,EAAAP,KAH1B7E,aAG0B,EAAA6E,KAF1B1E,WAE0B,EAChC0E,KAAKC,oBAAsB,GAAKH,EAAOS,UAAU,GACjDP,KAAKE,oBAAsB,GAAKJ,EAAOS,UAAU,GACjDP,KAAKG,kBAAoB,GAAKL,EAAO3E,QAAQ,GAC7C6E,KAAKI,kBAAoB,GAAKN,EAAO3E,QAAQ,GAC7C6E,KAAKK,gBAAkB,GAAKP,EAAOxE,MAAM,GACzC0E,KAAKM,gBAAkB,GAAKR,EAAOxE,MAAM,GAEzC0E,KAAKO,UAAYT,EAAOS,UACxBP,KAAK7E,QAAU2E,EAAO3E,QACtB6E,KAAK1E,MAAQwE,EAAOxE,MAtBxB,OAAAL,OAAAuF,EAAA,EAAAvF,CAAA4E,EAAA,EAAA3B,IAAA,kBAAAtG,MAAA,SA0BIwE,EACAqE,EACA7I,GAEA,IAAMqE,EAAS,IAAI4D,EAAOG,KAAKF,UAG/B,OADA7D,EA+EJ,SACEG,EACAqE,GAEA,IAAMC,EAKR,SAAsCtE,GACpC,OAAQA,GACN,KAAKP,EAAUQ,UACb,MAAO,mBACT,KAAKR,EAAUU,QACb,MAAO,iBACT,KAAKV,EAAUW,KACb,MAAO,gBAZOmE,CAA6BvE,GACzCwE,EAeR,SAAuCH,GACrC,OAAQA,GACN,KAAKb,GAAUiB,IACb,MAAO,MACT,KAAKjB,GAAUkB,IACb,MAAO,OApBIC,CAA8BN,GAC7C,OAAQC,EAAYE,EAtFNI,CAAoC5E,EAAWqE,IAC7C7I,EACPqE,IAjCX,CAAAiC,IAAA,SAAAtG,MAAA,WAsCI,MAAO,CAAE2I,UAD6BP,KAA9BO,UACYpF,QADkB6E,KAAnB7E,QACUG,MADS0E,KAAV1E,SArChC,CAAA4C,IAAA,oCAAAtG,MAAA,WA0CI,OAAO,IAAIiI,EAAO,CAChBU,UAAWU,GACTjB,KAAKO,UACLP,KAAKC,oBACLD,KAAKE,qBAEP/E,QAAS8F,GACPjB,KAAK7E,QACL6E,KAAKG,kBACLH,KAAKI,mBAEP9E,MAAO2F,GAAKjB,KAAK1E,MAAO0E,KAAKK,gBAAiBL,KAAKM,qBArDzD,CAAApC,IAAA,qBAAAtG,MAAA,SAyDqBwE,EAAsBtB,GACvC,OAAQkF,KAAKkB,iBAAiB9E,EAAWtB,KA1D7C,CAAAoD,IAAA,mBAAAtG,MAAA,SA6D2BwE,EAAsBtB,GAAyB,IAAAqG,EACnDnB,KAAKoB,UAAUhF,GADoCiF,EAAApG,OAAAqG,GAAA,EAAArG,CAAAkG,EAAA,GAC/DI,EAD+DF,EAAA,GAC1DG,EAD0DH,EAAA,GAEhEzJ,EAAQuE,EAAmBrB,EAAQsB,GACzC,OAAOmF,GAAO3J,GAASA,GAAS4J,IAhEpC,CAAAtD,IAAA,wBAAAtG,MAAA,SAmEwBkD,GAAyB,IAAA2G,EAAAzB,KAC7C,OAAOjE,EAAe2F,KAAK,SAACtF,GAAD,OACzBqF,EAAKrE,mBAAmBhB,EAAWtB,OArEzC,CAAAoD,IAAA,YAAAtG,MAAA,SAyEoBwE,GAChB,OAAQA,GACN,KAAKP,EAAUQ,UACb,OAAO2D,KAAKO,UACd,KAAK1E,EAAUU,QACb,OAAOyD,KAAK7E,QACd,KAAKU,EAAUW,KACb,OAAOwD,KAAK1E,WAhFpBuE,EAAA,GAqFA,SAASoB,GACPU,EACAC,EACAC,GAEA,IAAMC,EAAYC,GAAeH,GAC3BI,EAAYD,GAAeF,GAGjC,MAAO,CAFQpI,MAAMqI,GAAaH,EAAU,GAAKG,EAClCrI,MAAMuI,GAAaL,EAAU,GAAKK,GAInD,SAASD,GAAenK,GACtB,MAAI,UAAUqK,KAAKrK,GACVsK,SAAStK,EAAO,IAEhBuK,QCjHNC,GCAgBC,iGAYPC,GACV,OAAItC,KAAKuC,SACAD,EAAQE,OAERF,EAAQZ,KAAM1B,KAAapI,wCAKpC,OAAQoI,KAAayC,yCAIrB,OAAQzC,KAAKuC,qCAGRG,GAAoC,IAAAjB,EAAAzB,KACzC,OAAOA,KAAK2C,MAAM,CAChBH,KAAM,kBAAOf,GACbC,KAAM,SAAC9J,GAAD,OAAWyK,EAAOX,KAAKgB,EAAO9K,wCAI5BgL,GACV,OAAO5C,KAAK2C,MAAM,CAChBH,KAAM,kBAAMI,GACZlB,KAAM,SAAC9J,GAAD,OAAWA,oCArCNA,GACb,IAAM8J,EAAOzG,OAAO4H,OAAOR,EAAOS,WAGlC,OAFApB,EAAKe,SAAU,EACff,EAAK9J,MAAQA,EACN8J,iCAIP,OAAOqB,YAkCLA,GAAQ,WACZ,IAAMP,EAAOvH,OAAO4H,OAAOR,GAAOS,WAElC,OADAN,EAAKC,SAAU,EACRD,EAHK,+BD3CTJ,sGAMgBY,eAanB,SAAAA,EACEC,EACAC,GACA,IAAAzB,EAAA,OAAAxG,OAAA8E,EAAA,EAAA9E,CAAA+E,KAAAgD,IACAvB,EAAAxG,OAAAkI,EAAA,EAAAlI,CAAA+E,KAAA/E,OAAAmI,EAAA,EAAAnI,CAAA+H,GAAAK,KAAArD,KAAMiD,KAhBAK,YAeN,EAAA7B,EAdM7J,WAcN,EAAA6J,EAbM8B,WAaN,EAAA9B,EAZM+B,qBAYN,EAGA/B,EAAK6B,OAASlB,GAAWqB,QACzBhC,EAAK+B,gBAAkB,GAEnBN,IACFjI,OAAAyI,GAAA,EAAAzI,QAAAmI,EAAA,EAAAnI,CAAA+H,EAAAF,WAAA,OAAA7H,OAAA0I,EAAA,EAAA1I,CAAAwG,IAAA4B,KAAApI,OAAA0I,EAAA,EAAA1I,CAAAwG,GAAW,SAACmC,GACVnC,EAAK6B,OAASlB,GAAWyB,UACzBpC,EAAK7J,MAAQgM,EACbnC,EAAK+B,gBAAgB3I,QAAQ,SAACiJ,GAC5BA,QAGJ7I,OAAAyI,GAAA,EAAAzI,QAAAmI,EAAA,EAAAnI,CAAA+H,EAAAF,WAAA,QAAA7H,OAAA0I,EAAA,EAAA1I,CAAAwG,IAAA4B,KAAApI,OAAA0I,EAAA,EAAA1I,CAAAwG,GAAY,SAAChJ,GACXgJ,EAAK6B,OAASlB,GAAW2B,SACzBtC,EAAK8B,MAAQ9K,EACbgJ,EAAK+B,gBAAgB3I,QAAQ,SAACiJ,GAC5BA,SAlBNrC,gFAVoBuC,GACpB,OAAO,IAAIhB,EAAM,SAAC3K,EAASC,GACzB0L,EAAKC,KAAK5L,GACV2L,EAAKE,MAAM5L,KACV,kDA8B+BgK,GAUlC,OAJI,oBAAsBA,EAAQwB,UAChC9D,KAAKwD,gBAAgBW,KAAK7B,EAAQwB,UAG5B9D,KAAKsD,QACX,KAAKlB,GAAWqB,QACd,OAAOnB,EAAQ8B,UACjB,KAAKhC,GAAWyB,UACd,OAAOvB,EAAQ+B,UAAUrE,KAAKpI,OAChC,KAAKwK,GAAW2B,SACd,OAAOzB,EAAQgC,SAAStE,KAAKuD,4BAxDCnL,UE4BjBmM,eAWnB,SAAAA,EAAYC,GAAe,IAAA/C,EAAA,OAAAxG,OAAA8E,EAAA,EAAA9E,CAAA+E,KAAAuE,IACzB9C,EAAAxG,OAAAkI,EAAA,EAAAlI,CAAA+E,KAAA/E,OAAAmI,EAAA,EAAAnI,CAAAsJ,GAAAlB,KAAArD,KAAMwE,KAXAC,aAUmB,EAAAhD,EATnBiD,gBASmB,EAAAjD,EAPnBkD,iCAOmB,EAAAlD,EANnBmD,iCAMmB,EAAAnD,EALnBoD,+BAKmB,EAAApD,EAJnBqD,+BAImB,EAAArD,EAHnBsD,6BAGmB,EAAAtD,EAFnBuD,6BAEmB,EAGzBvD,EAAKjM,MAAQ,CACXuE,SAAUsI,GAAOG,OACjByC,gBAAiB5C,GAAOG,OACxBvG,OAAQ,IAAI4D,GAAO,CACjBU,UAAW,CAAC,EAAG,KACfpF,QAAS,CAAC,EAAG,KACbG,MAAO,CAAC,EAAG,OAIfmG,EAAKgD,QAAUS,IAAMC,YACrB1D,EAAKiD,WAAaQ,IAAMC,YAExBtP,OAAOK,iBAAiB,SAAU,kBAAMuL,EAAK2D,gBAC7CvP,OAAOK,iBAAiB,oBAAqB,kBAAMuL,EAAK2D,gBAExD3D,EAAK2D,YAAc3D,EAAK2D,YAAYC,KAAjBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IAEnBA,EAAK6D,aAAe7D,EAAK6D,aAAaD,KAAlBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IACpBA,EAAK8D,+BAAiC9D,EAAK8D,+BAA+BF,KAApCpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IAGtCA,EAAK+D,6BAA+B/D,EAAK+D,6BAA6BH,KAAlCpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IAGpCA,EAAKgE,YAAchE,EAAKgE,YAAYJ,KAAjBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IACnBA,EAAKiE,UAAYjE,EAAKiE,UAAUL,KAAfpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IACjBA,EAAKkE,YAAclE,EAAKkE,YAAYN,KAAjBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IACnBA,EAAKmE,aAAenE,EAAKmE,aAAaP,KAAlBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IACpBA,EAAKoE,YAAcpE,EAAKoE,YAAYR,KAAjBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IACnBA,EAAKqE,WAAarE,EAAKqE,WAAWT,KAAhBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IAClBA,EAAKsE,oBAAsBtE,EAAKsE,oBAAoBV,KAAzBpK,OAAA0I,EAAA,EAAA1I,CAAAwG,IAE3BA,EAAKkD,4BAA8B,SAACqB,GAAD,OACjCvE,EAAKwE,qBAAqBpK,EAAUQ,UAAWuD,GAAUiB,IAAKmF,IAChEvE,EAAKmD,4BAA8B,SAACoB,GAAD,OACjCvE,EAAKwE,qBAAqBpK,EAAUQ,UAAWuD,GAAUkB,IAAKkF,IAChEvE,EAAKoD,0BAA4B,SAACmB,GAAD,OAC/BvE,EAAKwE,qBAAqBpK,EAAUU,QAASqD,GAAUiB,IAAKmF,IAC9DvE,EAAKqD,0BAA4B,SAACkB,GAAD,OAC/BvE,EAAKwE,qBAAqBpK,EAAUU,QAASqD,GAAUkB,IAAKkF,IAC9DvE,EAAKsD,wBAA0B,SAACiB,GAAD,OAC7BvE,EAAKwE,qBAAqBpK,EAAUW,KAAMoD,GAAUiB,IAAKmF,IAC3DvE,EAAKuD,wBAA0B,SAACgB,GAAD,OAC7BvE,EAAKwE,qBAAqBpK,EAAUW,KAAMoD,GAAUkB,IAAKkF,IA/ClCvE,wEAkDlB,IAAAyE,EAAAlG,KACP,OACElL,EAAAC,EAAAC,cAAA,OACEC,UAAU,MACVwQ,YAAazF,KAAKyF,YAClBE,YAAa3F,KAAK2F,YAClBD,UAAW1F,KAAK0F,UAChBE,aAAc5F,KAAK4F,aACnBC,YAAa7F,KAAK6F,YAClBC,WAAY9F,KAAK8F,YAEhB9F,KAAKxK,MAAMuE,SAAS4I,MAAM,CACzBH,KAAM,kBACJ1N,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,SACEmR,KAAK,OACLC,OAAO,MACPC,SAAUH,EAAKZ,aACfgB,IAAKJ,EAAKzB,QACV8B,MAAO,CAAEC,QAAS,UANtB,qBAWF9E,KAAM,SAAA/M,GAaA,IAZJoF,EAYIpF,EAZJoF,SAEA0M,EAUI9R,EAVJ8R,cACAC,EASI/R,EATJ+R,yBACAC,EAQIhS,EARJgS,YACAC,EAOIjS,EAPJiS,uBAEA7N,EAKIpE,EALJoE,WACAiE,EAIIrI,EAJJqI,YACAC,EAGItI,EAHJsI,eAEA4J,EACIlS,EADJkS,YAEQxM,EAAuCN,EAAvCM,MAAOvB,EAAgCiB,EAAhCjB,QAASkC,EAAuBjB,EAAvBiB,mBAClB8L,EAAYhN,EAChBC,GAEI6D,EAAU3D,EAAwCF,GAClDmD,EAAkC,YAAV7C,EAE9B,OACEvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZ6B,EAAYgQ,EAAUC,YACrB,IACAD,EAAUE,UACV,IACDP,EAAc9D,MAAM,CACnBmB,SAAUoC,EAAKd,YACfhB,QAAS,iBAAM,IACfC,UAAW,SAAChP,GAAD,OAAcA,EAASC,QAAQC,KAAO,KACjD+O,SAAU,iBAAM,MAEjB7N,EAAsB4D,IAGzBvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBqR,IAAKJ,EAAKxB,YAC3C5P,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVsR,MAAO,CACLhJ,MACG,KAAOxE,EAAW/B,UAAY8P,EAAU9P,YACtC4G,EAAQ5G,UAAY8P,EAAU9P,WACjC,SAMVlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,WACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbwB,EAAsB4D,KAG3BvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SRlK7B,CACL,SACA,SACA,UACA,YACA,WACA,SACA,YQ4JqC6R,EAAUG,UAAW,IACrCH,EAAUE,UAAW,IACrBlQ,EAAYgQ,EAAUC,YAAa,IACnCD,EAAUI,gBAGfpS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,oBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbwR,EAAc9D,MAAM,CACnByB,QAAS,iBAAM,WACfC,UAAW,SAACoC,GAAD,OACT3R,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoS,SAAA,KACErS,EAAAC,EAAAC,cAACoS,EAAD,CACExS,YAAa8R,EACb7R,QAASqR,EAAKX,iCAEhBzQ,EAAAC,EAAAC,cAACG,EAAD,CACEC,YAAasR,EACbrR,SAAUoR,MAIhBnC,SAAU,SAAC7L,GAET,OADAE,QAAQC,IAAI,+BAAgCH,GACrC,0BAETqL,SAAUoC,EAAKd,gBAIrBtQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,kBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACb0R,EAAYhE,MAAM,CACjByB,QAAS,iBAAM,WACfC,UAAW,SAACsC,GAAD,OACT7R,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoS,SAAA,KACErS,EAAAC,EAAAC,cAACoS,EAAD,CACExS,YAAagS,EACb/R,QAASqR,EAAKV,+BAEhB1Q,EAAAC,EAAAC,cAACG,EAAD,CACEC,YAAawR,EACbvR,SAAUsR,MAIhBrC,SAAU,SAAC7L,GAET,OADAE,QAAQC,IAAI,+BAAgCH,GACrC,0BAETqL,SAAUoC,EAAKd,gBAIrBtQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,oBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACboS,KAAQzN,EAAcG,EAASgB,gBAAiB,KAGrDjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,oBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbmC,EAAoB4D,KAGzBlG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAS+B,EAAQ8P,KAEnChS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,cACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAS+B,EAAQ4G,MAIrC9I,EAAAC,EAAAC,cAACsS,EAAD,MAEAxS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACuS,EAAD,CACEnL,UAAWP,EAAUQ,UACrBvD,QAASA,EACTkE,YAAaA,EACbC,eAAgBA,EAChBhB,OAAQiK,EAAK1Q,MAAMyG,OACnBiB,sBAAuBA,IAEzBpI,EAAAC,EAAAC,cAACuS,EAAD,CACEnL,UAAWP,EAAUU,QACrBzD,QAASA,EACTkE,YAAaA,EACbC,eAAgBA,EAChBhB,OAAQiK,EAAK1Q,MAAMyG,OACnBiB,sBAAuBA,IAEzBpI,EAAAC,EAAAC,cAACuS,EAAD,CACEnL,UAAWP,EAAUW,KACrB1D,QAASA,EACTkE,YAAaA,EACbC,eAAgBA,EAChBhB,OAAQiK,EAAK1Q,MAAMyG,OACnBiB,sBAAuBA,KAI3BpI,EAAAC,EAAAC,cAACsS,EAAD,MAEAxS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,aAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,cACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,OACO,IACLH,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVkR,KAAK,OACLqB,QAAQ,OACR5P,MAAOsO,EAAK1Q,MAAMyG,OAAOgE,oBACzBoG,SAAUH,EAAKvB,4BACf8C,OAAQvB,EAAKH,uBAGjBjR,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,OACO,IACLH,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVkR,KAAK,OACLqB,QAAQ,OACR5P,MAAOsO,EAAK1Q,MAAMyG,OAAOiE,oBACzBmG,SAAUH,EAAKtB,4BACf6C,OAAQvB,EAAKH,wBAKnBjR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,WACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,OACO,IACLH,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVkR,KAAK,OACLqB,QAAQ,OACR5P,MAAOsO,EAAK1Q,MAAMyG,OAAOkE,kBACzBkG,SAAUH,EAAKrB,0BACf4C,OAAQvB,EAAKH,uBAGjBjR,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,OACO,IACLH,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVkR,KAAK,OACLqB,QAAQ,OACR5P,MAAOsO,EAAK1Q,MAAMyG,OAAOmE,kBACzBiG,SAAUH,EAAKpB,0BACf2C,OAAQvB,EAAKH,wBAKnBjR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,SACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,OACO,IACLH,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVkR,KAAK,OACLqB,QAAQ,OACR5P,MAAOsO,EAAK1Q,MAAMyG,OAAOoE,gBACzBgG,SAAUH,EAAKnB,wBACf0C,OAAQvB,EAAKH,uBAGjBjR,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,OACO,IACLH,EAAAC,EAAAC,cAAA,SACEC,UAAU,YACVkR,KAAK,OACLqB,QAAQ,OACR5P,MAAOsO,EAAK1Q,MAAMyG,OAAOqE,gBACzB+F,SAAUH,EAAKlB,wBACfyC,OAAQvB,EAAKH,yBAMrBjR,EAAAC,EAAAC,cAACsS,EAAD,MAEAxS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,oBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,oBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbmC,EAAoByP,EAAY/H,iBAIrChK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,yBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACboS,KAAQzN,EAAciN,EAAY9H,eAAgB,KAIvDjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,2BACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbuE,EAA6BqN,EAAYvH,eAI9CxK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,8BACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbsC,KAAKC,MAAMqP,EAAYlH,kEAa/B,IAAA+H,EAAA1H,KACL2H,EAAU3H,KAAKyE,QAAQmD,QAAvBD,MACR,GAAc,OAAVA,GAAkB,kBAAoBA,GAASA,EAAM5P,OAAS,EAAG,CACnE,IAAM8P,EAAOF,EAAM,GACbG,EAAS,IAAIC,WACnBD,EAAO5R,iBAAiB,UAAW,WACjC,GAAI4R,EAAOvE,MACT,MAAMuE,EAAOvE,MAEb,IAAMyE,EAASF,EAAOpP,OACtB,IAAInC,EAAQ,CACV0R,OAAO,EACPC,UAAW,OACXC,WAAY,IACZC,gBAAiB,SACjBC,oBAAoB,EACpBC,KAAM,YACLC,MAAMP,EAAQ,SAACzE,EAAYiF,GAC5B,GAAIjF,EACF,MAAMA,EAEN,IAAMkF,EAAeD,EAAKzO,SAASQ,SAAS,GACtCzB,ERjbb,SAA4BiB,GACjC,OAAOA,EAASQ,SACbC,IAAI,SAACG,GAAD,OAIF,SAA2BA,GAChC,OAAOA,EAAQD,KAAKF,IAAI,SAACmB,GAAD,OAAcA,EAAI7C,UAAS8B,OAL1B8N,CAAkB/N,KACxCC,OQ8ayB+N,CAAmBH,EAAKzO,UAClC6O,EAAY9P,EAAQA,EAAQf,OAAS,GAErCgC,EAAWI,EAAYqO,GAE7Bd,EAAKmB,SAAS,CACZ9O,SAAUsI,GAAOX,KAAK,CACpB3H,WAEA0M,cAAezD,GAAM8F,YACnB7Q,EACEwQ,EAAaM,mBACbN,EAAaO,sBAGjBtC,0BAA0B,EAC1BC,YAAa3D,GAAM8F,YACjB7Q,EACE2Q,EAAUK,aACVL,EAAUM,gBAGdtC,wBAAwB,EAExB7N,WAAYe,EACVC,GAEFiD,YAAa,EACbC,eAAgBkM,GAEhBtC,YAAalI,GAAe5E,EAAU2N,EAAKlS,MAAMyG,QAEjDmN,eAAgB/G,GAAOG,eAOnCsF,EAAOuB,kBAAkBxB,6DAK3B7H,KAAK6I,SAAS,SAACrT,GAAD,MAAY,CACxBuE,SAAUvE,EAAMuE,SAASS,IAAI,SAACT,GAAD,OAAAkB,OAAAC,EAAA,EAAAD,CAAA,GACxBlB,EADwB,CAE3B2M,0BAA2B3M,EAAS2M,uFAMxC1G,KAAK6I,SAAS,SAACrT,GAAD,MAAY,CACxBuE,SAAUvE,EAAMuE,SAASS,IAAI,SAACT,GAAD,OAAAkB,OAAAC,EAAA,EAAAD,CAAA,GACxBlB,EADwB,CAE3B6M,wBAAyB7M,EAAS6M,kEAK5B0C,GACVtJ,KAAKuJ,cAAcD,EAAME,OAAmBF,EAAMG,QAASH,EAAMI,8CAGtDJ,GACX,IAAMK,EAAQL,EAAMM,QAAQ,GAC5B5J,KAAKuJ,cAAcD,EAAME,OAAmBG,EAAMF,QAASE,EAAMD,+CAGrDF,EAAiBjL,EAAWE,GACxCuB,KAAK6I,SAAS,SAACrT,GAAD,MAAY,CACxByP,gBAAiB5C,GAAOX,KAAK8H,GAC7BzP,SAAUvE,EAAMuE,SAASS,IAAI,SAAChF,GAAD,OAAAyF,OAAAC,EAAA,EAAAD,CAAA,GACxBzF,EADwB,CAE3B4T,eAAgB/G,GAAOX,KAAK,CAC1BmI,uBAAwB,CAAEtL,IAAGE,KAC7BqL,kBAAmBtU,EAAMuD,wDAO/BiH,KAAK+J,mDAIL/J,KAAK+J,oDAIL/J,KAAK6I,SAAS,SAACrT,GAAD,MAAY,CACxBuE,SAAUvE,EAAMuE,SAASS,IAAI,SAAChF,GAAD,OAAAyF,OAAAC,EAAA,EAAAD,CAAA,GACxBzF,EADwB,CAE3B4T,eAAgB/G,GAAOG,WAEzByC,gBAAiB5C,GAAOG,8CAIhB8G,GACVtJ,KAAKgK,cAAcV,EAAMG,QAASH,EAAMI,6CAG9BJ,GACV,IAAMK,EAAQL,EAAMM,QAAQ,GAC5B5J,KAAKgK,cAAcL,EAAMF,QAASE,EAAMD,+CAG5BnL,EAAWE,GACvB,GAAIuB,KAAK0E,YAAc1E,KAAK0E,WAAWkD,QACrC,GAAI5H,KAAKiK,kBAAmB,CAC1B,IAAMC,EAAOlK,KAAK0E,WAAWkD,QAAQuC,wBAE/BC,GADK7L,EAAI2L,EAAKG,MACaH,EAAK3M,MAChC+M,EAA0B/S,KAAKgK,IACnC,EACAhK,KAAKiK,IAAI,EAAG4I,IAEdpK,KAAK6I,SAAS,SAACrT,GAAD,MAAY,CACxBuE,SAAUvE,EAAMuE,SAASS,IAAI,SAAChF,GAC5B,IAMMuD,ER5dX,SAAkBwR,EAAa/R,EAAWgS,GAC/C,IAAMC,EAAWF,EAAMvT,UACjB0T,EAASlS,EAAIxB,UAEnB,OAAO,IAAI6F,KADK4N,GAAYC,EAASD,GAAYD,GQydpBG,CAND7Q,EAChBtE,EAAMuE,UAEQE,EACdzE,EAAMuE,UAKNuQ,GAEF,OAAOrP,OAAAC,EAAA,EAAAD,CAAA,GACFzF,EADL,CAEEuD,aACAiE,YAAanE,EAAerD,EAAMuE,SAASjB,QAASC,eAIjDiH,KAAK4K,qBACd5K,KAAK6I,SAAS,SAACrT,GAAD,MAAY,CACxBuE,SAAUvE,EAAMuE,SAASS,IAAI,SAACqQ,GAC5B,OAAOA,EAAczB,eAAezG,MAAM,CACxCH,KAAM,kBAAMqI,GACZnJ,KAAM,SAAAoJ,GAAmD,IAAhDjB,EAAgDiB,EAAhDjB,uBAAwBC,EAAwBgB,EAAxBhB,kBAEzBiB,GADKxM,EAAIsL,EAAuBtL,GACb1I,OAAOC,WAC1BmI,GAAa4M,EAAc5N,eAAiB8N,EAC5CC,EAAgBlB,EAAkB9S,UAAYiH,EAC9C6I,EAAYhN,EAChB+Q,EAAc9Q,UAEV6D,EAAU3D,EACd4Q,EAAc9Q,UAEVkR,EAAgB1T,KAAKiK,IACzBsF,EAAU9P,UACVO,KAAKgK,IAAI3D,EAAQ5G,UAAWgU,IAExBE,EAAU,IAAIrO,KAAKoO,GACnBE,EAAWtS,EACfgS,EAAc9Q,SAASjB,QACvBoS,GAEF,OAAOjQ,OAAAC,EAAA,EAAAD,CAAA,GACF4P,EADL,CAEE9R,WAAYmS,EACZlO,YAAamO,sDAUF,IACjBzG,EAAe1E,KAAf0E,WACR,OAAO1E,KAAKxK,MAAMyP,gBAAgBtC,MAAM,CACtCH,KAAM,kBAAM,GACZd,KAAM,SAAC8H,GAAD,SAEF9E,GACAA,EAAWkD,SACXvR,EAAiBqO,EAAWkD,QAAS4B,mDAM3C,OAAOxJ,KAAKxK,MAAMyP,gBAAgBtC,MAAM,CACtCH,KAAM,kBAAM,GACZd,KAAM,SAAC8H,GAAD,MAA+B,WAAnBA,EAAO4B,wDAK3BhP,EACAqE,EACA6I,GAEAtJ,KAAK6I,SAAS,CACZ5M,OAAQ+D,KAAKxK,MAAMyG,OAAOoP,gBACxBjP,EACAqE,EACC6I,EAAME,OAA4B5R,uDAMvC,IAAMqE,EAAS+D,KAAKxK,MAAMyG,OAAOqP,oCACjCtL,KAAK6I,SAAS,CACZ5M,SACAlC,SAAUiG,KAAKxK,MAAMuE,SAASS,IAAI,SAAChF,GAAD,OAAAyF,OAAAC,EAAA,EAAAD,CAAA,GAC7BzF,EAD6B,CAEhCqR,YAAalI,GAAenJ,EAAMuE,SAAUkC,gBA5mBnBiJ,IAAMqG,WA4oBjCpC,GAA2B,IClqBbqC,QACW,cAA7B3V,OAAOR,SAASoW,UAEe,UAA7B5V,OAAOR,SAASoW,UAEhB5V,OAAOR,SAASoW,SAAS9I,MACvB,2DCZN+I,IAASC,OAAO7W,EAAAC,EAAAC,cAAC4W,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhI,KAAK,SAACiI,GAClCA,EAAaC","file":"static/js/main.a0221c7f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpandButton.css\";\n\nexport default function ExpandButton({\n  isExpanded,\n  onClick,\n}: {\n  isExpanded: boolean;\n  onClick: () => void;\n}): React.ReactElement {\n  return (\n    <button className=\"ExpandButton\" onClick={onClick}>\n      {toggleText(isExpanded)}\n    </button>\n  );\n}\n\nfunction toggleText(isExpanded: boolean): string {\n  if (isExpanded) {\n    return \"▶◀\";\n  } else {\n    return \"◀▶\";\n  }\n}\n","import { Address } from \"../helpers\";\n\n// Actually returns a `string`, but I used `any` to appease the compiler\n//   which doesn't accept functional components returning strings.\n// When this TypeScript bug is fixed, feel free to replace `...): any` with `...): string`.\nexport default function Location({\n  isTruncated,\n  location,\n}: {\n  isTruncated: boolean;\n  location: Address;\n}): any {\n  if (!isTruncated) {\n    return location.display_name;\n  } else {\n    return location.address.city + \", \" + location.address.state;\n  }\n}\n","import React from \"react\";\nimport \"./SectionDivider.css\";\n\nexport default function SectionDivider() {\n  return <div className=\"SectionDivider\" />;\n}\n","const axes: Axes = {} as Axes;\nexport default axes;\n\nupdateAxes();\n\nwindow.addEventListener(\"resize\", updateAxes);\nwindow.addEventListener(\"orientationchange\", updateAxes);\n\nfunction updateAxes() {\n  if (window.innerWidth > window.innerHeight) {\n    axes.major = window.innerWidth;\n    axes.minor = window.innerHeight;\n  } else {\n    axes.major = window.innerHeight;\n    axes.minor = window.innerWidth;\n  }\n}\n\ninterface Axes {\n  major: number;\n  minor: number;\n}\n","import geocoder_ from \"node-open-geocoder\";\nimport isOrIsAncestorOf_ from \"node-is-ancestor-of\";\nimport EasyFit_ from \"easy-fit\";\n\nexport const geocoder = geocoder_;\nexport const isOrIsAncestorOf = isOrIsAncestorOf_;\nexport const EasyFit = EasyFit_;\n","import { geocoder } from \"./lib\";\nimport { Activity, Record } from \"./getActivity\";\n\nexport function getActivityRecords(activity: any): any[] {\n  return activity.sessions\n    .map((session: any) => getSessionRecords(session))\n    .flat();\n}\n\nexport function getSessionRecords(session: any): any[] {\n  return session.laps.map((lap: any) => lap.records).flat();\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n  return word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase();\n}\n\nexport function dayOfWeekString(index: number): string {\n  return [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ][index];\n}\n\nexport function monthString(index: number): string {\n  return [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ][index];\n}\n\nexport function getTime(date: Date): string {\n  return date.getHours() + \":\" + date.getMinutes();\n}\n\nexport function getActivityDuration(activity: any): string {\n  return getDurationFromSecs(activity);\n}\n\nexport function getDurationFromSecs(millis: number): string {\n  const hours = Math.floor(millis / 3600);\n  const minutes = Math.floor((millis % 3600) / 60);\n  const seconds = Math.floor(millis % 60);\n  return (\n    zeroPad(hours, 2) + \":\" + zeroPad(minutes, 2) + \":\" + zeroPad(seconds, 2)\n  );\n}\n\nexport function zeroPad(value: any, minWidth: number): string {\n  const string = \"\" + value;\n  if (string.length < minWidth) {\n    const deficit = minWidth - string.length;\n    return \"0\".repeat(deficit) + string;\n  } else {\n    return string;\n  }\n}\n\nexport function reverseGeocode(lat: number, lon: number): Promise<Address> {\n  return new Promise((resolve, reject) => {\n    geocoder()\n      .reverse(lon, lat)\n      .end((err: any, result: any) => {\n        if (err) {\n          reject(err);\n        } else {\n          console.log(result);\n          resolve(result);\n        }\n      });\n  });\n}\n\nexport function lerpDate(start: Date, end: Date, factor: number): Date {\n  const startMil = start.getTime();\n  const endMil = end.getTime();\n  const lerpMil = startMil + (endMil - startMil) * factor;\n  return new Date(lerpMil);\n}\n\nexport function getOffsetIndex(records: Record[], offsetTime: Date): number {\n  const cursorMil = offsetTime.getTime();\n  const { length } = records;\n  for (let i = 0; i < length; i++) {\n    const { timestamp } = records[i];\n    if (timestamp.getTime() >= cursorMil) {\n      return i;\n    }\n  }\n  return length - 1;\n}\n\nexport interface Address {\n  address: {\n    city?: string;\n    country?: string;\n    county?: string;\n    house_number?: string;\n    neighbourhood?: string;\n    postcode?: string;\n    road?: string;\n    state?: string;\n    supermarket?: string;\n  };\n  display_name: string;\n}\n\nexport function sum(numbers: number[]): number {\n  return numbers.reduce((total, n) => total + n, 0);\n}\n\nexport function fractionalMinuteToPaceString(minutes: number): string {\n  if (isNaN(minutes) || minutes === Infinity || minutes === -Infinity) {\n    return \"stationary\";\n  } else {\n    const fractionalPart = minutes - Math.floor(minutes);\n    return (\n      Math.floor(minutes) + \":\" + zeroPad(Math.floor(60 * fractionalPart), 2)\n    );\n  }\n}\n\nexport function average(numbers: number[]): number {\n  return sum(numbers) / numbers.length;\n}\n\nexport function metersToMiles(meters: number): number {\n  return meters / 1609.34;\n}\n\nexport function sliceDuration(records: Record[], duration: number): Record[] {\n  if (records.length === 0) {\n    return [];\n  } else {\n    const endTime = records[0].timestamp.getTime() + duration;\n    const endIndex = records.findIndex((r) => r.timestamp.getTime() > endTime);\n    if (endIndex === -1) {\n      return records.slice();\n    } else {\n      return records.slice(0, endIndex);\n    }\n  }\n}\n\nexport function getFirstRecordTimestampOrActivityStartTime(\n  activity: Activity\n): Date {\n  if (activity.records.length === 0) {\n    return activity.start_time;\n  } else {\n    return activity.records[0].timestamp;\n  }\n}\n\nexport function getLastRecordTimestampOrActivityEndTime(\n  activity: Activity\n): Date {\n  if (activity.records.length === 0) {\n    return activity.end_time;\n  } else {\n    return activity.records[activity.records.length - 1].timestamp;\n  }\n}\n","import allVariants from \"./allVariants\";\nimport { sum } from \"./helpers\";\n\nexport function getActivity(rawFile: any): Activity {\n  const sport: string = rawFile.sport.sport;\n  const { activity: rawActivity } = rawFile;\n  const sessions: Session[] = rawActivity.sessions.map(getSession);\n  const laps: Lap[] = sessions.map((session) => session.laps).flat();\n  const records: Record[] = sessions.map((session) => session.records).flat();\n  records.forEach((record, i) => {\n    record.index = i;\n  });\n  const total_distance = sum(sessions.map((session) => session.total_distance));\n  const total_elapsed_time = sum(\n    sessions.map((session) => session.total_elapsed_time)\n  );\n  const start_time = records[0].timestamp;\n  const end_time = records[records.length - 1].timestamp;\n\n  const activity = {\n    ...rawActivity,\n    sport,\n    sessions,\n    laps,\n    records,\n    total_distance,\n    total_elapsed_time,\n    start_time,\n    end_time,\n  };\n  convertRpmToSpmIfRunning(activity);\n  calculatePace(activity);\n  return activity;\n}\n\nfunction getSession(rawSession: any): Session {\n  const session = { ...rawSession };\n  session.laps = session.laps.map(getLap);\n  session.records = session.laps.map((lap: Lap) => lap.records).flat();\n  session.start_time = session.records[0].timestamp;\n  session.end_time = session.records[session.records.length - 1].timestamp;\n  return session;\n}\n\nfunction getLap(rawLap: any): Lap {\n  const lap = { ...rawLap };\n  lap.records = lap.records.slice();\n  lap.start_time = lap.records[0].timestamp;\n  lap.end_time = lap.records[lap.records.length - 1].timestamp;\n  return lap;\n}\n\nfunction convertRpmToSpmIfRunning(activity: Activity) {\n  if (activity.sport === \"running\") {\n    activity.records.forEach((record) => {\n      record.cadence *= 2;\n    });\n  }\n}\n\nfunction calculatePace(activity: Activity) {\n  activity.records.forEach((record) => {\n    record.pace = 60 / (record.speed * KPH_TO_MPH);\n  });\n}\nconst KPH_TO_MPH = 0.621371;\n\nexport interface Activity {\n  start_time: Date;\n  end_time: Date;\n\n  sport: string;\n  sessions: Session[];\n  laps: Lap[];\n  records: Record[];\n\n  total_distance: number;\n  total_elapsed_time: number;\n  total_timer_time: number;\n}\n\nexport interface Session {\n  start_time: Date;\n  end_time: Date;\n\n  laps: Lap[];\n  records: Record[];\n\n  avg_cadence: number;\n  avg_heart_rate: 148;\n  avg_power: number;\n  avg_speed: number;\n  avg_temperature: number;\n\n  max_cadence: number;\n  max_heart_rate: number;\n  max_power: number;\n  max_speed: number;\n  max_temperature: number;\n\n  total_distance: number;\n  total_elapsed_time: number;\n  total_timer_time: number;\n}\n\nexport interface Lap {\n  start_time: Date;\n  end_time: Date;\n\n  records: Record[];\n\n  avg_cadence: number;\n  avg_heart_rate: 148;\n  avg_power: number;\n  avg_speed: number;\n  avg_temperature: number;\n\n  max_cadence: number;\n  max_heart_rate: number;\n  max_power: number;\n  max_speed: number;\n  max_temperature: number;\n\n  total_distance: number;\n  total_elapsed_time: number;\n  total_timer_time: number;\n}\n\nexport interface Record {\n  index: number;\n  timestamp: Date;\n\n  altitude: number;\n  cadence: number;\n  distance: number;\n  elapsed_time: number;\n  heart_rate: number;\n  position_lat: number;\n  position_long: number;\n  speed: number;\n  pace: number;\n  temperature: number;\n}\n\nexport enum Attribute {\n  HeartRate,\n  Cadence,\n  Pace,\n}\nexport const ALL_ATTRIBUTES = allVariants<Attribute>(Attribute);\n\nexport function getRecordAttribute(\n  record: Record,\n  attribute: Attribute\n): number {\n  switch (attribute) {\n    case Attribute.HeartRate:\n      return record.heart_rate;\n    case Attribute.Cadence:\n      return record.cadence;\n    case Attribute.Pace:\n      return record.pace;\n  }\n}\n\nexport function getAttributeDisplayNameAndUnits(\n  attribute: Attribute,\n  shouldConvertRpmToSpm: boolean\n): string {\n  switch (attribute) {\n    case Attribute.HeartRate:\n      return \"Heart rate (bpm)\";\n    case Attribute.Cadence:\n      return \"Cadence \" + (shouldConvertRpmToSpm ? \"(spm)\" : \"(rpm)\");\n    case Attribute.Pace:\n      return \"Pace (min/mi)\";\n  }\n}\n\nexport function cloneActivity(original: Activity): Activity {\n  const sessions: Session[] = original.sessions.map(cloneSession);\n  const laps: Lap[] = sessions.map((session) => session.laps).flat();\n  const records: Record[] = sessions.map((session) => session.records).flat();\n  return { ...original, sessions, laps, records };\n}\n\nfunction cloneSession(original: Session): Session {\n  const laps = original.laps.map(cloneLap);\n  const records = laps.map((lap: Lap) => lap.records).flat();\n  return { ...original, laps, records };\n}\n\nfunction cloneLap(original: Lap): Lap {\n  const records = original.records.map(cloneRecord);\n  return { ...original, records };\n}\n\nfunction cloneRecord(original: Record): Record {\n  const timestamp = cloneDate(original.timestamp);\n  return { ...original, timestamp };\n}\n\nfunction cloneDate(original: Date): Date {\n  return new Date(original.getTime());\n}\n","export default function allVariants<E>(enum_: /*typeof E*/ any): E[] {\n  return Object.values(enum_).filter((k) => \"number\" === typeof k) as E[];\n}\n","import React from \"react\";\nimport \"./Timeline.css\";\n\nimport { Stage, Layer, Rect, Circle } from \"react-konva\";\n\nimport axes from \"../axes\";\nimport { Filter } from \"../filter\";\nimport {\n  getAttributeDisplayNameAndUnits,\n  getRecordAttribute,\n  Attribute,\n  Record,\n} from \"../getActivity\";\nimport { fractionalMinuteToPaceString, sliceDuration } from \"../helpers\";\n\nexport default function Timeline({\n  attribute,\n  records,\n  offsetIndex,\n  viewedDuration,\n  filter,\n  shouldConvertRpmToSpm,\n}: Props): React.ReactElement {\n  return (\n    <div className=\"Timeline\">\n      <div className=\"TimelineLabel\">\n        {getAttributeDisplayNameAndUnits(attribute, shouldConvertRpmToSpm)}\n        {(() => {\n          const record = records[offsetIndex];\n          if (record) {\n            return (\n              <span\n                className={\n                  \"ActiveRecordValue ActiveRecordValue--\" +\n                  (() => {\n                    if (filter.isAttributeIllegal(attribute, record)) {\n                      return \"illegal\";\n                    } else if (filter.isAnyAttributeIllegal(record)) {\n                      return \"illegalOther\";\n                    } else {\n                      return \"legal\";\n                    }\n                  })()\n                }\n              >\n                {\" = \" +\n                  (attribute === Attribute.Pace\n                    ? fractionalMinuteToPaceString(\n                        getRecordAttribute(record, attribute)\n                      )\n                    : getRecordAttribute(record, attribute))}\n              </span>\n            );\n          } else {\n            return null;\n          }\n        })()}\n      </div>\n      <Stage width={window.innerWidth} height={timelineHeight()}>\n        <Layer width={window.innerWidth} height={timelineHeight()}>\n          <Rect\n            fill=\"#eeea\"\n            width={window.innerWidth}\n            height={timelineHeight()}\n          />\n          {sliceDuration(records.slice(offsetIndex), viewedDuration).map(\n            (record, i) => {\n              const deltaTime =\n                record.timestamp.getTime() -\n                records[offsetIndex].timestamp.getTime();\n              return (\n                <Circle\n                  key={record.index}\n                  fill={(() => {\n                    if (filter.isAttributeIllegal(attribute, record)) {\n                      return ILLEGAL_ATTRIBUTE_RECORD_DOT_FILL;\n                    } else if (filter.isAnyAttributeIllegal(record)) {\n                      return ILLEGAL_OTHER_ATTRIBUTE_RECORD_DOT_FILL;\n                    } else {\n                      return i === 0\n                        ? ACTIVE_RECORD_DOT_FILL\n                        : INACTIVE_RECORD_DOT_FILL;\n                    }\n                  })()}\n                  x={\n                    window.innerWidth * (deltaTime / viewedDuration) +\n                    recordDotRadius()\n                  }\n                  y={\n                    timelineHeight() -\n                    timelineHeight() *\n                      (getRecordAttribute(record, attribute) / 200)\n                  }\n                  radius={recordDotRadius()}\n                />\n              );\n            }\n          )}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\ninterface Props {\n  attribute: Attribute;\n  records: Record[];\n  offsetIndex: number;\n  viewedDuration: number;\n  filter: Filter;\n  shouldConvertRpmToSpm: boolean;\n}\n\nconst ACTIVE_RECORD_DOT_FILL = \"#3ce\";\nconst INACTIVE_RECORD_DOT_FILL = \"#08b\";\nconst ILLEGAL_ATTRIBUTE_RECORD_DOT_FILL = \"red\";\nconst ILLEGAL_OTHER_ATTRIBUTE_RECORD_DOT_FILL = \"orange\";\n\nfunction timelineHeight(): number {\n  return 0.2 * axes.minor;\n}\n\nfunction recordDotRadius(): number {\n  return 0.005 * axes.major;\n}\n","import { Filter } from \"./filter\";\nimport { cloneActivity, Activity } from \"./getActivity\";\nimport { average, metersToMiles } from \"./helpers\";\n\nexport interface Cumulatives {\n  totalDuration: number;\n  totalDistance: number;\n  averagePace: number;\n  averageHeartRate: number;\n}\n\nexport function getCumulatives(\n  originalActivity: Activity,\n  filter: Filter\n): Cumulatives {\n  const activity = cloneActivity(originalActivity);\n\n  let totalDuration = 0;\n  let totalDistance = 0;\n\n  activity.sessions.forEach((session) => {\n    if (session.records.length > 0) {\n      const [first, ...rest] = session.records;\n      let timestamp = first.timestamp;\n      let distance = first.distance;\n      rest.forEach((record) => {\n        if (!filter.isAnyAttributeIllegal(record)) {\n          const deltaTime = record.timestamp.getTime() - timestamp.getTime();\n          const deltaDistance = record.distance - distance;\n          totalDuration += deltaTime;\n          totalDistance += deltaDistance;\n        }\n\n        timestamp = record.timestamp;\n        distance = record.distance;\n      });\n    }\n  });\n\n  // Milliseconds to seconds\n  totalDuration *= 1e-3;\n\n  const averagePace = getAveragePace(totalDistance, totalDuration);\n  const heartRates = activity.records.map((record) => record.heart_rate);\n  const averageHeartRate = average(heartRates);\n  return {\n    totalDuration,\n    totalDistance,\n    averagePace,\n    averageHeartRate,\n  };\n}\n\nfunction getAveragePace(meters: number, milliseconds: number): number {\n  const miles = metersToMiles(meters);\n  const minutes = milliseconds / 60;\n  return minutes / miles;\n}\n","import {\n  getRecordAttribute,\n  Attribute,\n  Record,\n  ALL_ATTRIBUTES,\n} from \"./getActivity\";\n\nexport enum BoundType {\n  Min,\n  Max,\n}\n\nexport class Filter {\n  public pendingHeartRateMin: string;\n  public pendingHeartRateMax: string;\n  public pendingCadenceMin: string;\n  public pendingCadenceMax: string;\n  public pendingSpeedMin: string;\n  public pendingSpeedMax: string;\n\n  private heartRate: [number, number];\n  private cadence: [number, number];\n  private speed: [number, number];\n\n  constructor(config: FilterConfig) {\n    this.pendingHeartRateMin = \"\" + config.heartRate[0];\n    this.pendingHeartRateMax = \"\" + config.heartRate[1];\n    this.pendingCadenceMin = \"\" + config.cadence[0];\n    this.pendingCadenceMax = \"\" + config.cadence[1];\n    this.pendingSpeedMin = \"\" + config.speed[0];\n    this.pendingSpeedMax = \"\" + config.speed[1];\n\n    this.heartRate = config.heartRate;\n    this.cadence = config.cadence;\n    this.speed = config.speed;\n  }\n\n  setPendingBound(\n    attribute: Attribute,\n    boundType: BoundType,\n    value: string\n  ): Filter {\n    const filter = new Filter(this.config());\n    const key = pendingKeyFromAttributeAndBoundType(attribute, boundType);\n    filter[key] = value as any;\n    return filter;\n  }\n\n  private config(): FilterConfig {\n    const { heartRate, cadence, speed } = this;\n    return { heartRate, cadence, speed };\n  }\n\n  syncPendingBoundsWithActualBounds(): Filter {\n    return new Filter({\n      heartRate: sync(\n        this.heartRate,\n        this.pendingHeartRateMin,\n        this.pendingHeartRateMax\n      ),\n      cadence: sync(\n        this.cadence,\n        this.pendingCadenceMin,\n        this.pendingCadenceMax\n      ),\n      speed: sync(this.speed, this.pendingSpeedMin, this.pendingSpeedMax),\n    });\n  }\n\n  isAttributeIllegal(attribute: Attribute, record: Record): boolean {\n    return !this.isAttributeLegal(attribute, record);\n  }\n\n  private isAttributeLegal(attribute: Attribute, record: Record): boolean {\n    const [min, max] = this.getBounds(attribute);\n    const value = getRecordAttribute(record, attribute);\n    return min <= value && value <= max;\n  }\n\n  isAnyAttributeIllegal(record: Record): boolean {\n    return ALL_ATTRIBUTES.some((attribute) =>\n      this.isAttributeIllegal(attribute, record)\n    );\n  }\n\n  private getBounds(attribute: Attribute): [number, number] {\n    switch (attribute) {\n      case Attribute.HeartRate:\n        return this.heartRate;\n      case Attribute.Cadence:\n        return this.cadence;\n      case Attribute.Pace:\n        return this.speed;\n    }\n  }\n}\n\nfunction sync(\n  oldBounds: [number, number],\n  pendingMin: string,\n  pendingMax: string\n): [number, number] {\n  const parsedMin = strictParseInt(pendingMin);\n  const parsedMax = strictParseInt(pendingMax);\n  const newMin = isNaN(parsedMin) ? oldBounds[0] : parsedMin;\n  const newMax = isNaN(parsedMax) ? oldBounds[1] : parsedMax;\n  return [newMin, newMax];\n}\n\nfunction strictParseInt(value: string): number {\n  if (/^-?\\d*$/.test(value)) {\n    return parseInt(value, 10);\n  } else {\n    return NaN;\n  }\n}\n\ninterface FilterConfig {\n  heartRate: [number, number];\n  cadence: [number, number];\n  speed: [number, number];\n}\n\nfunction pendingKeyFromAttributeAndBoundType(\n  attribute: Attribute,\n  boundType: BoundType\n): keyof Filter {\n  const beginning = pendingKeyBeginningAttribute(attribute);\n  const ending = pendingKeyEndingFromBoundType(boundType);\n  return (beginning + ending) as keyof Filter;\n}\n\nfunction pendingKeyBeginningAttribute(attribute: Attribute): string {\n  switch (attribute) {\n    case Attribute.HeartRate:\n      return \"pendingHeartRate\";\n    case Attribute.Cadence:\n      return \"pendingCadence\";\n    case Attribute.Pace:\n      return \"pendingSpeed\";\n  }\n}\n\nfunction pendingKeyEndingFromBoundType(boundType: BoundType): string {\n  switch (boundType) {\n    case BoundType.Min:\n      return \"Min\";\n    case BoundType.Max:\n      return \"Max\";\n  }\n}\n","enum PromStatus {\n  Pending,\n  Fulfilled,\n  Rejected,\n}\n\nexport default class Qprom<T> extends Promise<T> {\n  private status: PromStatus;\n  private value?: T;\n  private error?: any;\n  private updateListeners: (() => void)[];\n\n  static fromPromise<T>(prom: Promise<T>): Qprom<T> {\n    return new Qprom((resolve, reject) => {\n      prom.then(resolve);\n      prom.catch(reject);\n    }, true);\n  }\n\n  private constructor(\n    cb: (resolve: (val: T) => void, reject: (err: any) => void) => void,\n    shouldListen: boolean\n  ) {\n    super(cb);\n\n    this.status = PromStatus.Pending;\n    this.updateListeners = [];\n\n    if (shouldListen) {\n      super.then((val) => {\n        this.status = PromStatus.Fulfilled;\n        this.value = val;\n        this.updateListeners.forEach((onUpdate) => {\n          onUpdate();\n        });\n      });\n      super.catch((err) => {\n        this.status = PromStatus.Rejected;\n        this.error = err;\n        this.updateListeners.forEach((onUpdate) => {\n          onUpdate();\n        });\n      });\n    }\n  }\n\n  match<Pending, Fulfilled, Rejected>(matcher: {\n    pending: () => Pending;\n    fulfilled: (val: T) => Fulfilled;\n    rejected: (err: any) => Rejected;\n    onUpdate?: () => void;\n  }): Pending | Fulfilled | Rejected {\n    if (\"function\" === typeof matcher.onUpdate) {\n      this.updateListeners.push(matcher.onUpdate);\n    }\n\n    switch (this.status) {\n      case PromStatus.Pending:\n        return matcher.pending();\n      case PromStatus.Fulfilled:\n        return matcher.fulfilled(this.value!);\n      case PromStatus.Rejected:\n        return matcher.rejected(this.error);\n    }\n  }\n}\n","export default class Option<T> {\n  static some<T>(value: T): Option<T> {\n    const some = Object.create(Option.prototype);\n    some.isNone_ = false;\n    some.value = value;\n    return some;\n  }\n\n  static none() {\n    return NONE;\n  }\n\n  match<N, S>(matcher: { none: () => N; some: (value: T) => S }): N | S {\n    if (this.isNone()) {\n      return matcher.none();\n    } else {\n      return matcher.some((this as any).value);\n    }\n  }\n\n  isNone() {\n    return (this as any).isNone_;\n  }\n\n  isSome() {\n    return !this.isNone();\n  }\n\n  map<R>(mapper: (value: T) => R): Option<R> {\n    return this.match({\n      none: () => (this as unknown) as Option<R>,\n      some: (value) => Option.some(mapper(value)),\n    });\n  }\n\n  unwrapOr<D>(defaultValue: D): T | D {\n    return this.match({\n      none: () => defaultValue,\n      some: (value) => value,\n    });\n  }\n}\n\nconst NONE = (() => {\n  const none = Object.create(Option.prototype);\n  none.isNone_ = true;\n  return none;\n})();\n","import React from \"react\";\nimport \"./App.css\";\n\nimport ExpandButton from \"./components/ExpandButton\";\nimport Location from \"./components/Location\";\nimport SectionDivider from \"./components/SectionDivider\";\nimport Timeline from \"./components/Timeline\";\n\nimport { isOrIsAncestorOf, EasyFit } from \"./lib\";\n\nimport roundTo from \"round-to\";\n\nimport { getCumulatives, Cumulatives } from \"./cumulatives\";\nimport { BoundType, Filter } from \"./filter\";\nimport { getActivity, Activity, Attribute } from \"./getActivity\";\nimport {\n  getActivityRecords,\n  capitalizeFirstLetter,\n  dayOfWeekString,\n  monthString,\n  getTime,\n  getDurationFromSecs,\n  reverseGeocode,\n  lerpDate,\n  getOffsetIndex,\n  metersToMiles,\n  fractionalMinuteToPaceString,\n  getFirstRecordTimestampOrActivityStartTime,\n  getLastRecordTimestampOrActivityEndTime,\n  Address,\n} from \"./helpers\";\nimport Option from \"./Option\";\nimport Qprom from \"./Qprom\";\n\nexport default class App extends React.Component<{}, AppState> {\n  private fileRef: React.RefObject<HTMLInputElement>;\n  private minimapRef: React.RefObject<HTMLDivElement>;\n\n  private onChangePendingHeartRateMin: (event: React.ChangeEvent) => void;\n  private onChangePendingHeartRateMax: (event: React.ChangeEvent) => void;\n  private onChangePendingCadenceMin: (event: React.ChangeEvent) => void;\n  private onChangePendingCadenceMax: (event: React.ChangeEvent) => void;\n  private onChangePendingSpeedMin: (event: React.ChangeEvent) => void;\n  private onChangePendingSpeedMax: (event: React.ChangeEvent) => void;\n\n  constructor(props: object) {\n    super(props);\n\n    this.state = {\n      activity: Option.none(),\n      mouseDownTarget: Option.none(),\n      filter: new Filter({\n        heartRate: [0, 200],\n        cadence: [0, 200],\n        speed: [0, 40],\n      }),\n    };\n\n    this.fileRef = React.createRef();\n    this.minimapRef = React.createRef();\n\n    window.addEventListener(\"resize\", () => this.forceUpdate());\n    window.addEventListener(\"orientationchange\", () => this.forceUpdate());\n\n    this.forceUpdate = this.forceUpdate.bind(this);\n\n    this.handleUpload = this.handleUpload.bind(this);\n    this.toggleIsStartLocationTruncated = this.toggleIsStartLocationTruncated.bind(\n      this\n    );\n    this.toggleIsEndLocationTruncated = this.toggleIsEndLocationTruncated.bind(\n      this\n    );\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onSyncPendingBounds = this.onSyncPendingBounds.bind(this);\n\n    this.onChangePendingHeartRateMin = (e) =>\n      this.onChangePendingBound(Attribute.HeartRate, BoundType.Min, e);\n    this.onChangePendingHeartRateMax = (e) =>\n      this.onChangePendingBound(Attribute.HeartRate, BoundType.Max, e);\n    this.onChangePendingCadenceMin = (e) =>\n      this.onChangePendingBound(Attribute.Cadence, BoundType.Min, e);\n    this.onChangePendingCadenceMax = (e) =>\n      this.onChangePendingBound(Attribute.Cadence, BoundType.Max, e);\n    this.onChangePendingSpeedMin = (e) =>\n      this.onChangePendingBound(Attribute.Pace, BoundType.Min, e);\n    this.onChangePendingSpeedMax = (e) =>\n      this.onChangePendingBound(Attribute.Pace, BoundType.Max, e);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        onTouchMove={this.onTouchMove}\n        onTouchEnd={this.onTouchEnd}\n      >\n        {this.state.activity.match({\n          none: () => (\n            <label className=\"UploadButton\">\n              <input\n                type=\"file\"\n                accept=\"fit\"\n                onChange={this.handleUpload}\n                ref={this.fileRef}\n                style={{ display: \"none\" }}\n              />\n              Upload .fit file\n            </label>\n          ),\n          some: ({\n            activity,\n\n            startLocation,\n            isStartLocationTruncated,\n            endLocation,\n            isEndLocationTruncated,\n\n            offsetTime,\n            offsetIndex,\n            viewedDuration,\n\n            cumulatives,\n          }) => {\n            const { sport, records, total_elapsed_time } = activity;\n            const startTime = getFirstRecordTimestampOrActivityStartTime(\n              activity\n            );\n            const endTime = getLastRecordTimestampOrActivityEndTime(activity);\n            const shouldConvertRpmToSpm = sport === \"running\";\n\n            return (\n              <div className=\"ActivityView\">\n                <div className=\"Head\">\n                  <div className=\"SectionHeader\">\n                    {monthString(startTime.getMonth()) +\n                      \" \" +\n                      startTime.getDate() +\n                      \" \"}\n                    {startLocation.match({\n                      onUpdate: this.forceUpdate,\n                      pending: () => \"\",\n                      fulfilled: (location) => location.address.city + \" \",\n                      rejected: () => \"\",\n                    })}\n                    {capitalizeFirstLetter(sport)}\n                  </div>\n\n                  <div className=\"MinimapBackground\" ref={this.minimapRef}>\n                    <div\n                      className=\"MinimapForeground\"\n                      style={{\n                        width:\n                          (100 * (offsetTime.getTime() - startTime.getTime())) /\n                            (endTime.getTime() - startTime.getTime()) +\n                          \"%\",\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"Body\">\n                  <div className=\"ActivityOverview\">\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Sport: </span>\n                      <span className=\"Value\">\n                        {capitalizeFirstLetter(sport)}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Date: </span>\n                      <span className=\"Value\">\n                        {dayOfWeekString(startTime.getDay())}{\" \"}\n                        {startTime.getDate()}{\" \"}\n                        {monthString(startTime.getMonth())}{\" \"}\n                        {startTime.getFullYear()}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Start location: </span>\n                      <span className=\"Value\">\n                        {startLocation.match({\n                          pending: () => \"loading\",\n                          fulfilled: (startLocation) => (\n                            <>\n                              <ExpandButton\n                                isExpanded={!isStartLocationTruncated}\n                                onClick={this.toggleIsStartLocationTruncated}\n                              />\n                              <Location\n                                isTruncated={isStartLocationTruncated}\n                                location={startLocation}\n                              />\n                            </>\n                          ),\n                          rejected: (err) => {\n                            console.log(\"Error loading start location\", err);\n                            return \"Error loading location\";\n                          },\n                          onUpdate: this.forceUpdate,\n                        })}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">End location: </span>\n                      <span className=\"Value\">\n                        {endLocation.match({\n                          pending: () => \"loading\",\n                          fulfilled: (endLocation) => (\n                            <>\n                              <ExpandButton\n                                isExpanded={!isEndLocationTruncated}\n                                onClick={this.toggleIsEndLocationTruncated}\n                              />\n                              <Location\n                                isTruncated={isEndLocationTruncated}\n                                location={endLocation}\n                              />\n                            </>\n                          ),\n                          rejected: (err) => {\n                            console.log(\"Error loading start location\", err);\n                            return \"Error loading location\";\n                          },\n                          onUpdate: this.forceUpdate,\n                        })}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Total distance: </span>\n                      <span className=\"Value\">\n                        {roundTo(metersToMiles(activity.total_distance), 2)}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Total duration: </span>\n                      <span className=\"Value\">\n                        {getDurationFromSecs(total_elapsed_time)}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Start time: </span>\n                      <span className=\"Value\">{getTime(startTime)}</span>\n                    </div>\n                    <div className=\"Entry\">\n                      <span className=\"Key\">End time: </span>\n                      <span className=\"Value\">{getTime(endTime)}</span>\n                    </div>\n                  </div>\n\n                  <SectionDivider />\n\n                  <div className=\"TimelineContainer\">\n                    <Timeline\n                      attribute={Attribute.HeartRate}\n                      records={records}\n                      offsetIndex={offsetIndex}\n                      viewedDuration={viewedDuration}\n                      filter={this.state.filter}\n                      shouldConvertRpmToSpm={shouldConvertRpmToSpm}\n                    />\n                    <Timeline\n                      attribute={Attribute.Cadence}\n                      records={records}\n                      offsetIndex={offsetIndex}\n                      viewedDuration={viewedDuration}\n                      filter={this.state.filter}\n                      shouldConvertRpmToSpm={shouldConvertRpmToSpm}\n                    />\n                    <Timeline\n                      attribute={Attribute.Pace}\n                      records={records}\n                      offsetIndex={offsetIndex}\n                      viewedDuration={viewedDuration}\n                      filter={this.state.filter}\n                      shouldConvertRpmToSpm={shouldConvertRpmToSpm}\n                    />\n                  </div>\n\n                  <SectionDivider />\n\n                  <div className=\"FilterContainer\">\n                    <div className=\"SectionHeader\">Filters: </div>\n\n                    <div className=\"Filter\">\n                      <div className=\"FilterAttribute\">Heart Rate</div>\n                      <label className=\"FilterMinLabel\">\n                        Min:{\" \"}\n                        <input\n                          className=\"FilterMin\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingHeartRateMin}\n                          onChange={this.onChangePendingHeartRateMin}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                      <label className=\"FilterMaxLabel\">\n                        Max:{\" \"}\n                        <input\n                          className=\"FilterMax\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingHeartRateMax}\n                          onChange={this.onChangePendingHeartRateMax}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                    </div>\n\n                    <div className=\"Filter\">\n                      <div className=\"FilterAttribute\">Cadence</div>\n                      <label className=\"FilterMinLabel\">\n                        Min:{\" \"}\n                        <input\n                          className=\"FilterMin\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingCadenceMin}\n                          onChange={this.onChangePendingCadenceMin}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                      <label className=\"FilterMaxLabel\">\n                        Max:{\" \"}\n                        <input\n                          className=\"FilterMax\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingCadenceMax}\n                          onChange={this.onChangePendingCadenceMax}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                    </div>\n\n                    <div className=\"Filter\">\n                      <div className=\"FilterAttribute\">Speed</div>\n                      <label className=\"FilterMinLabel\">\n                        Min:{\" \"}\n                        <input\n                          className=\"FilterMin\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingSpeedMin}\n                          onChange={this.onChangePendingSpeedMin}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                      <label className=\"FilterMaxLabel\">\n                        Max:{\" \"}\n                        <input\n                          className=\"FilterMax\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingSpeedMax}\n                          onChange={this.onChangePendingSpeedMax}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                    </div>\n                  </div>\n\n                  <SectionDivider />\n\n                  <div className=\"CumulativesContainer\">\n                    <div className=\"SectionHeader\">Filtered stats: </div>\n\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Total duration: </span>\n                      <span className=\"Value\">\n                        {getDurationFromSecs(cumulatives.totalDuration)}\n                      </span>\n                    </div>\n\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Total distance (mi): </span>\n                      <span className=\"Value\">\n                        {roundTo(metersToMiles(cumulatives.totalDistance), 2)}\n                      </span>\n                    </div>\n\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Average pace (min/mi): </span>\n                      <span className=\"Value\">\n                        {fractionalMinuteToPaceString(cumulatives.averagePace)}\n                      </span>\n                    </div>\n\n                    <div className=\"Entry\">\n                      <span className=\"Key\">Average heart rate (bpm): </span>\n                      <span className=\"Value\">\n                        {Math.floor(cumulatives.averageHeartRate)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          },\n        })}\n      </div>\n    );\n  }\n\n  handleUpload() {\n    const { files } = this.fileRef.current!;\n    if (files !== null && \"object\" === typeof files && files.length > 0) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.addEventListener(\"loadend\", () => {\n        if (reader.error) {\n          throw reader.error;\n        } else {\n          const buffer = reader.result as ArrayBuffer;\n          new EasyFit({\n            force: true,\n            speedUnit: \"km/h\",\n            lengthUnit: \"m\",\n            temperatureUnit: \"kelvin\",\n            elapsedRecordField: true,\n            mode: \"cascade\",\n          }).parse(buffer, (error: any, data: any) => {\n            if (error) {\n              throw error;\n            } else {\n              const firstSession = data.activity.sessions[0];\n              const records = getActivityRecords(data.activity);\n              const endRecord = records[records.length - 1];\n\n              const activity = getActivity(data);\n\n              this.setState({\n                activity: Option.some({\n                  activity,\n\n                  startLocation: Qprom.fromPromise(\n                    reverseGeocode(\n                      firstSession.start_position_lat,\n                      firstSession.start_position_long\n                    )\n                  ),\n                  isStartLocationTruncated: true,\n                  endLocation: Qprom.fromPromise(\n                    reverseGeocode(\n                      endRecord.position_lat,\n                      endRecord.position_long\n                    )\n                  ),\n                  isEndLocationTruncated: true,\n\n                  offsetTime: getFirstRecordTimestampOrActivityStartTime(\n                    activity\n                  ),\n                  offsetIndex: 0,\n                  viewedDuration: STARTING_VIEWED_DURATION,\n\n                  cumulatives: getCumulatives(activity, this.state.filter),\n\n                  timelineScroll: Option.none(),\n                }),\n              });\n            }\n          });\n        }\n      });\n      reader.readAsArrayBuffer(file);\n    }\n  }\n\n  toggleIsStartLocationTruncated() {\n    this.setState((state) => ({\n      activity: state.activity.map((activity) => ({\n        ...activity,\n        isStartLocationTruncated: !activity.isStartLocationTruncated,\n      })),\n    }));\n  }\n\n  toggleIsEndLocationTruncated() {\n    this.setState((state) => ({\n      activity: state.activity.map((activity) => ({\n        ...activity,\n        isEndLocationTruncated: !activity.isEndLocationTruncated,\n      })),\n    }));\n  }\n\n  onMouseDown(event: React.MouseEvent) {\n    this.onPointerDown(event.target as Element, event.clientX, event.clientY);\n  }\n\n  onTouchStart(event: React.TouchEvent) {\n    const touch = event.touches[0];\n    this.onPointerDown(event.target as Element, touch.clientX, touch.clientY);\n  }\n\n  onPointerDown(target: Element, x: number, y: number) {\n    this.setState((state) => ({\n      mouseDownTarget: Option.some(target),\n      activity: state.activity.map((state) => ({\n        ...state,\n        timelineScroll: Option.some({\n          initialPointerLocation: { x, y },\n          initialOffsetTime: state.offsetTime,\n        }),\n      })),\n    }));\n  }\n\n  onMouseUp() {\n    this.onPointerUp();\n  }\n\n  onTouchEnd() {\n    this.onPointerUp();\n  }\n\n  onPointerUp() {\n    this.setState((state) => ({\n      activity: state.activity.map((state) => ({\n        ...state,\n        timelineScroll: Option.none(),\n      })),\n      mouseDownTarget: Option.none(),\n    }));\n  }\n\n  onMouseMove(event: React.MouseEvent) {\n    this.onPointerMove(event.clientX, event.clientY);\n  }\n\n  onTouchMove(event: React.TouchEvent) {\n    const touch = event.touches[0];\n    this.onPointerMove(touch.clientX, touch.clientY);\n  }\n\n  onPointerMove(x: number, y: number) {\n    if (this.minimapRef && this.minimapRef.current) {\n      if (this.isCursorDragged()) {\n        const rect = this.minimapRef.current.getBoundingClientRect();\n        const dx = x - rect.left;\n        const rawCompletionFactor = dx / rect.width;\n        const clampedCompletionFactor = Math.min(\n          1,\n          Math.max(0, rawCompletionFactor)\n        );\n        this.setState((state) => ({\n          activity: state.activity.map((state) => {\n            const startTime = getFirstRecordTimestampOrActivityStartTime(\n              state.activity\n            );\n            const endTime = getLastRecordTimestampOrActivityEndTime(\n              state.activity\n            );\n            const offsetTime = lerpDate(\n              startTime,\n              endTime,\n              clampedCompletionFactor\n            );\n            return {\n              ...state,\n              offsetTime,\n              offsetIndex: getOffsetIndex(state.activity.records, offsetTime),\n            };\n          }),\n        }));\n      } else if (this.isTimelineDragged()) {\n        this.setState((state) => ({\n          activity: state.activity.map((activityState) => {\n            return activityState.timelineScroll.match({\n              none: () => activityState,\n              some: ({ initialPointerLocation, initialOffsetTime }) => {\n                const dx = x - initialPointerLocation.x;\n                const widthFactor = dx / window.innerWidth;\n                const deltaTime = -activityState.viewedDuration * widthFactor;\n                const newTimeMillis = initialOffsetTime.getTime() + deltaTime;\n                const startTime = getFirstRecordTimestampOrActivityStartTime(\n                  activityState.activity\n                );\n                const endTime = getLastRecordTimestampOrActivityEndTime(\n                  activityState.activity\n                );\n                const clampedMillis = Math.max(\n                  startTime.getTime(),\n                  Math.min(endTime.getTime(), newTimeMillis)\n                );\n                const newTime = new Date(clampedMillis);\n                const newIndex = getOffsetIndex(\n                  activityState.activity.records,\n                  newTime\n                );\n                return {\n                  ...activityState,\n                  offsetTime: newTime,\n                  offsetIndex: newIndex,\n                };\n              },\n            });\n          }),\n        }));\n      }\n    }\n  }\n\n  isCursorDragged(): boolean {\n    const { minimapRef } = this;\n    return this.state.mouseDownTarget.match({\n      none: () => false,\n      some: (target) =>\n        !!(\n          minimapRef &&\n          minimapRef.current &&\n          isOrIsAncestorOf(minimapRef.current, target)\n        ),\n    });\n  }\n\n  isTimelineDragged(): boolean {\n    return this.state.mouseDownTarget.match({\n      none: () => false,\n      some: (target) => target.tagName === \"CANVAS\",\n    });\n  }\n\n  onChangePendingBound(\n    attribute: Attribute,\n    boundType: BoundType,\n    event: React.ChangeEvent\n  ) {\n    this.setState({\n      filter: this.state.filter.setPendingBound(\n        attribute,\n        boundType,\n        (event.target as HTMLInputElement).value\n      ),\n    });\n  }\n\n  onSyncPendingBounds() {\n    const filter = this.state.filter.syncPendingBoundsWithActualBounds();\n    this.setState({\n      filter,\n      activity: this.state.activity.map((state) => ({\n        ...state,\n        cumulatives: getCumulatives(state.activity, filter),\n      })),\n    });\n  }\n}\n\ninterface AppState {\n  activity: Option<ActivityViewState>;\n  mouseDownTarget: Option<Element>;\n  filter: Filter;\n}\n\ninterface ActivityViewState {\n  activity: Activity;\n\n  startLocation: Qprom<Address>;\n  isStartLocationTruncated: boolean;\n  endLocation: Qprom<Address>;\n  isEndLocationTruncated: boolean;\n\n  offsetTime: Date;\n  offsetIndex: number;\n  viewedDuration: number;\n\n  cumulatives: Cumulatives;\n\n  timelineScroll: Option<{\n    initialPointerLocation: { x: number; y: number };\n    initialOffsetTime: Date;\n  }>;\n}\n\nconst STARTING_VIEWED_DURATION = 300e3;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}