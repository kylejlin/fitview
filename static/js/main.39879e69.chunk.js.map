{"version":3,"sources":["components/ExpandButton.tsx","components/Location.tsx","components/SectionDivider.tsx","axes.ts","getActivity.ts","lib.js","helpers.ts","allVariants.ts","components/Timeline.tsx","filter.ts","Qprom.ts","Option.ts","App.tsx","serviceWorker.js","index.js"],"names":["ExpandButton","_ref","isExpanded","onClick","react_default","a","createElement","className","toggleText","Location","isTruncated","location","address","city","state","display_name","SectionDivider","axes","updateAxes","window","innerWidth","innerHeight","major","minor","addEventListener","Attribute","geocoder","geocoder_","isOrIsAncestorOf","isOrIsAncestorOf_","EasyFit","EasyFit_","capitalizeFirstLetter","word","slice","toUpperCase","toLowerCase","monthString","index","getTime","date","getHours","getMinutes","getDurationFromMillis","millis","hours","Math","floor","minutes","seconds","zeroPad","value","minWidth","string","length","repeat","reverseGeocode","lat","lon","Promise","resolve","reject","reverse","end","err","result","console","log","lerpDate","start","factor","startMil","endMil","Date","getOffsetIndex","records","offsetTime","cursorMil","i","timestamp","sum","numbers","reduce","total","n","getSession","rawSession","session","Object","objectSpread","laps","map","getLap","lap","flat","start_time","end_time","rawLap","enum_","ALL_ATTRIBUTES","values","filter","k","getRecordAttribute","record","attribute","HeartRate","heart_rate","Cadence","cadence","Speed","speed","Timeline","offsetIndex","width","getAttributeDisplayName","isAttributeIllegal","isAnyAttributeIllegal","roundTo","ReactKonva","height","timelineHeight","fill","key","ILLEGAL_ATTRIBUTE_RECORD_DOT_FILL","ILLEGAL_OTHER_ATTRIBUTE_RECORD_DOT_FILL","ACTIVE_RECORD_DOT_FILL","INACTIVE_RECORD_DOT_FILL","x","recordDotRadius","y","radius","BoundType","Filter","config","classCallCheck","this","pendingHeartRateMin","pendingHeartRateMax","pendingCadenceMin","pendingCadenceMax","pendingSpeedMin","pendingSpeedMax","heartRate","createClass","boundType","beginning","pendingKeyBeginningAttribute","ending","Min","Max","pendingKeyEndingFromBoundType","pendingKeyFromAttributeAndBoundType","sync","isAttributeLegal","_this$getBounds","getBounds","_this$getBounds2","slicedToArray","min","max","_this","some","oldBounds","pendingMin","pendingMax","parsedMin","strictParseInt","parsedMax","isNaN","test","parseInt","NaN","PromStatus","Option","matcher","isNone","none","isNone_","mapper","match","defaultValue","create","prototype","NONE","Qprom","cb","shouldListen","possibleConstructorReturn","getPrototypeOf","call","status","error","updateListeners","Pending","get","assertThisInitialized","val","Fulfilled","forEach","onUpdate","Rejected","prom","then","catch","push","pending","fulfilled","rejected","App","props","fileRef","minimapRef","onChangePendingHeartRateMin","onChangePendingHeartRateMax","onChangePendingCadenceMin","onChangePendingCadenceMax","onChangePendingSpeedMin","onChangePendingSpeedMax","activity","mouseDownTarget","React","createRef","forceUpdate","bind","handleUpload","toggleIsStartLocationTruncated","toggleIsEndLocationTruncated","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchMove","onTouchEnd","onSyncPendingBounds","e","onChangePendingBound","_this2","type","accept","onChange","ref","style","display","startLocation","isStartLocationTruncated","endLocation","isEndLocationTruncated","sport","total_elapsed_time","startTime","endTime","getMonth","getDate","getDay","getFullYear","Fragment","ExpandButton_ExpandButton","SectionDivider_SectionDivider","Timeline_Timeline","pattern","onBlur","_this3","files","current","file","reader","FileReader","buffer","force","speedUnit","lengthUnit","temperatureUnit","elapsedRecordField","mode","parse","data","firstSession","sessions","getSessionRecords","getActivityRecords","endRecord","rawFile","total_distance","getActivity","setState","fromPromise","start_position_lat","start_position_long","position_lat","position_long","STARTING_WIDTH","readAsArrayBuffer","event","target","isCursorDragged","rect","getBoundingClientRect","rawCompletionFactor","clientX","left","clampedCompletionFactor","touches","setPendingBound","syncPendingBoundsWithActualBounds","Component","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39879e69.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpandButton.css\";\n\nexport default function ExpandButton({\n  isExpanded,\n  onClick\n}: {\n  isExpanded: boolean;\n  onClick: () => void;\n}): React.ReactElement {\n  return (\n    <button className=\"ExpandButton\" onClick={onClick}>\n      {toggleText(isExpanded)}\n    </button>\n  );\n}\n\nfunction toggleText(isExpanded: boolean): string {\n  if (isExpanded) {\n    return \"▶◀\";\n  } else {\n    return \"◀▶\";\n  }\n}\n","import { Address } from \"../helpers\";\n\n// Actually returns a `string`, but I used `any` to appease the compiler\n//   which doesn't accept functional components returning strings.\n// When this TypeScript bug is fixed, feel free to replace `...): any` with `...): string`.\nexport default function Location({\n  isTruncated,\n  location\n}: {\n  isTruncated: boolean;\n  location: Address;\n}): any {\n  if (!isTruncated) {\n    return location.display_name;\n  } else {\n    return location.address.city + \", \" + location.address.state;\n  }\n}\n","import React from \"react\";\nimport \"./SectionDivider.css\";\n\nexport default function SectionDivider() {\n  return <div className=\"SectionDivider\" />;\n}\n","const axes: Axes = {} as Axes;\nexport default axes;\n\nupdateAxes();\n\nwindow.addEventListener(\"resize\", updateAxes);\nwindow.addEventListener(\"orientationchange\", updateAxes);\n\nfunction updateAxes() {\n  if (window.innerWidth > window.innerHeight) {\n    axes.major = window.innerWidth;\n    axes.minor = window.innerHeight;\n  } else {\n    axes.major = window.innerHeight;\n    axes.minor = window.innerWidth;\n  }\n}\n\ninterface Axes {\n  major: number;\n  minor: number;\n}\n","import allVariants from \"./allVariants\";\nimport { sum } from \"./helpers\";\n\nexport function getActivity(rawFile: any): Activity {\n  const sport: string = rawFile.sport.sport;\n  const { activity } = rawFile;\n  const sessions: Session[] = activity.sessions.map(getSession);\n  const laps: Lap[] = sessions.map(session => session.laps).flat();\n  const records: Record[] = sessions.map(session => session.records).flat();\n  records.forEach((record, i) => {\n    record.index = i;\n  });\n  const total_distance = sum(sessions.map(session => session.total_distance));\n  const total_elapsed_time = sum(\n    sessions.map(session => session.total_elapsed_time)\n  );\n  const start_time = records[0].timestamp;\n  const end_time = records[records.length - 1].timestamp;\n\n  return {\n    ...activity,\n    sport,\n    sessions,\n    laps,\n    records,\n    total_distance,\n    total_elapsed_time,\n    start_time,\n    end_time\n  };\n}\n\nfunction getSession(rawSession: any): Session {\n  const session = { ...rawSession };\n  session.laps = session.laps.map(getLap);\n  session.records = session.laps.map((lap: Lap) => lap.records).flat();\n  session.start_time = session.records[0].timestamp;\n  session.end_time = session.records[session.records.length - 1].timestamp;\n  return session;\n}\n\nfunction getLap(rawLap: any): Lap {\n  const lap = { ...rawLap };\n  lap.records = lap.records.slice();\n  lap.start_time = lap.records[0].timestamp;\n  lap.end_time = lap.records[lap.records.length - 1].timestamp;\n  return lap;\n}\n\nexport interface Activity {\n  start_time: Date;\n  end_time: Date;\n\n  sport: string;\n  sessions: Session[];\n  laps: Lap[];\n  records: Record[];\n\n  total_distance: number;\n  total_elapsed_time: number;\n  total_timer_time: number;\n}\n\nexport interface Session {\n  start_time: Date;\n  end_time: Date;\n\n  laps: Lap[];\n  records: Record[];\n\n  avg_cadence: number;\n  avg_heart_rate: 148;\n  avg_power: number;\n  avg_speed: number;\n  avg_temperature: number;\n\n  max_cadence: number;\n  max_heart_rate: number;\n  max_power: number;\n  max_speed: number;\n  max_temperature: number;\n\n  total_distance: number;\n  total_elapsed_time: number;\n  total_timer_time: number;\n}\n\nexport interface Lap {\n  start_time: Date;\n  end_time: Date;\n\n  records: Record[];\n\n  avg_cadence: number;\n  avg_heart_rate: 148;\n  avg_power: number;\n  avg_speed: number;\n  avg_temperature: number;\n\n  max_cadence: number;\n  max_heart_rate: number;\n  max_power: number;\n  max_speed: number;\n  max_temperature: number;\n\n  total_distance: number;\n  total_elapsed_time: number;\n  total_timer_time: number;\n}\n\nexport interface Record {\n  index: number;\n  timestamp: Date;\n\n  altitude: number;\n  cadence: number;\n  distance: number;\n  elapsed_time: number;\n  heart_rate: number;\n  position_lat: number;\n  position_long: number;\n  speed: number;\n  temperature: number;\n}\n\nexport enum Attribute {\n  HeartRate,\n  Cadence,\n  Speed\n}\nexport const ALL_ATTRIBUTES = allVariants<Attribute>(Attribute);\n\nexport function getRecordAttribute(\n  record: Record,\n  attribute: Attribute\n): number {\n  switch (attribute) {\n    case Attribute.HeartRate:\n      return record.heart_rate;\n    case Attribute.Cadence:\n      return record.cadence;\n    case Attribute.Speed:\n      return record.speed;\n  }\n}\n\nexport function getAttributeDisplayName(attribute: Attribute): string {\n  switch (attribute) {\n    case Attribute.HeartRate:\n      return \"Heart rate\";\n    case Attribute.Cadence:\n      return \"Cadence\";\n    case Attribute.Speed:\n      return \"Speed\";\n  }\n}\n","import geocoder_ from \"node-open-geocoder\";\nimport isOrIsAncestorOf_ from \"node-is-ancestor-of\";\nimport EasyFit_ from \"easy-fit\";\n\nexport const geocoder = geocoder_;\nexport const isOrIsAncestorOf = isOrIsAncestorOf_;\nexport const EasyFit = EasyFit_;\n","import { geocoder } from \"./lib\";\nimport { Record } from \"./getActivity\";\n\nexport function getActivityRecords(activity: any): any[] {\n  return activity.sessions\n    .map((session: any) => getSessionRecords(session))\n    .flat();\n}\n\nexport function getSessionRecords(session: any): any[] {\n  return session.laps.map((lap: any) => lap.records).flat();\n}\n\nexport function capitalizeFirstLetter(word: string): string {\n  return word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase();\n}\n\nexport function dayOfWeekString(index: number): string {\n  return [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ][index];\n}\n\nexport function monthString(index: number): string {\n  return [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ][index];\n}\n\nexport function getTime(date: Date): string {\n  return date.getHours() + \":\" + date.getMinutes();\n}\n\nexport function getActivityDuration(activity: any): string {\n  return getDurationFromMillis(activity);\n}\n\nexport function getDurationFromMillis(millis: number): string {\n  const hours = Math.floor(millis / 3600);\n  const minutes = Math.floor((millis % 3600) / 60);\n  const seconds = Math.floor(millis % 60);\n  return (\n    zeroPad(hours, 2) + \":\" + zeroPad(minutes, 2) + \":\" + zeroPad(seconds, 2)\n  );\n}\n\nexport function zeroPad(value: any, minWidth: number): string {\n  const string = \"\" + value;\n  if (string.length < minWidth) {\n    const deficit = minWidth - string.length;\n    return \"0\".repeat(deficit) + string;\n  } else {\n    return string;\n  }\n}\n\nexport function reverseGeocode(lat: number, lon: number): Promise<Address> {\n  return new Promise((resolve, reject) => {\n    geocoder()\n      .reverse(lon, lat)\n      .end((err: any, result: any) => {\n        if (err) {\n          reject(err);\n        } else {\n          console.log(result);\n          resolve(result);\n        }\n      });\n  });\n}\n\nexport function lerpDate(start: Date, end: Date, factor: number): Date {\n  const startMil = start.getTime();\n  const endMil = end.getTime();\n  const lerpMil = startMil + (endMil - startMil) * factor;\n  return new Date(lerpMil);\n}\n\nexport function getOffsetIndex(records: Record[], offsetTime: Date): number {\n  const cursorMil = offsetTime.getTime();\n  const { length } = records;\n  for (let i = 0; i < length; i++) {\n    const { timestamp } = records[i];\n    if (timestamp.getTime() >= cursorMil) {\n      return i;\n    }\n  }\n  return length - 1;\n}\n\nexport interface Address {\n  address: {\n    city?: string;\n    country?: string;\n    county?: string;\n    house_number?: string;\n    neighbourhood?: string;\n    postcode?: string;\n    road?: string;\n    state?: string;\n    supermarket?: string;\n  };\n  display_name: string;\n}\n\nexport function sum(numbers: number[]): number {\n  return numbers.reduce((total, n) => total + n, 0);\n}\n","export default function allVariants<E>(enum_: /*typeof E*/ any): E[] {\n  return Object.values(enum_).filter(k => \"number\" === typeof k) as E[];\n}\n","import React from \"react\";\nimport \"./Timeline.css\";\n\nimport { Stage, Layer, Rect, Circle } from \"react-konva\";\n\nimport roundTo from \"round-to\";\n\nimport axes from \"../axes\";\nimport { Filter } from \"../filter\";\nimport {\n  getAttributeDisplayName,\n  getRecordAttribute,\n  Attribute,\n  Record\n} from \"../getActivity\";\n\nexport default function Timeline({\n  attribute,\n  records,\n  offsetIndex,\n  width,\n  filter\n}: Props): React.ReactElement {\n  return (\n    <div className=\"Timeline\">\n      <div className=\"TimelineLabel\">\n        {getAttributeDisplayName(attribute)}\n        {(() => {\n          const record = records[offsetIndex];\n          if (record) {\n            return (\n              <span\n                className={\n                  \"ActiveRecordValue ActiveRecordValue--\" +\n                  (() => {\n                    if (filter.isAttributeIllegal(attribute, record)) {\n                      return \"illegal\";\n                    } else if (filter.isAnyAttributeIllegal(record)) {\n                      return \"illegalOther\";\n                    } else {\n                      return \"legal\";\n                    }\n                  })()\n                }\n              >\n                {\" = \" + roundTo(getRecordAttribute(record, attribute), 3)}\n              </span>\n            );\n          } else {\n            return null;\n          }\n        })()}\n      </div>\n      <Stage width={window.innerWidth} height={timelineHeight()}>\n        <Layer width={window.innerWidth} height={timelineHeight()}>\n          <Rect\n            fill=\"#eeea\"\n            width={window.innerWidth}\n            height={timelineHeight()}\n          />\n          {records.slice(offsetIndex, offsetIndex + width).map((record, i) => (\n            <Circle\n              key={record.index}\n              fill={(() => {\n                if (filter.isAttributeIllegal(attribute, record)) {\n                  return ILLEGAL_ATTRIBUTE_RECORD_DOT_FILL;\n                } else if (filter.isAnyAttributeIllegal(record)) {\n                  return ILLEGAL_OTHER_ATTRIBUTE_RECORD_DOT_FILL;\n                } else {\n                  return i === 0\n                    ? ACTIVE_RECORD_DOT_FILL\n                    : INACTIVE_RECORD_DOT_FILL;\n                }\n              })()}\n              x={window.innerWidth * (i / width) + recordDotRadius()}\n              y={\n                timelineHeight() -\n                timelineHeight() * (getRecordAttribute(record, attribute) / 200)\n              }\n              radius={recordDotRadius()}\n            />\n          ))}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\ninterface Props {\n  attribute: Attribute;\n  records: Record[];\n  offsetIndex: number;\n  width: number;\n  filter: Filter;\n}\n\nconst ACTIVE_RECORD_DOT_FILL = \"#3ce\";\nconst INACTIVE_RECORD_DOT_FILL = \"#08b\";\nconst ILLEGAL_ATTRIBUTE_RECORD_DOT_FILL = \"red\";\nconst ILLEGAL_OTHER_ATTRIBUTE_RECORD_DOT_FILL = \"orange\";\n\nfunction timelineHeight(): number {\n  return 0.2 * axes.minor;\n}\n\nfunction recordDotRadius(): number {\n  return 0.005 * axes.major;\n}\n","import {\n  getRecordAttribute,\n  Attribute,\n  Record,\n  ALL_ATTRIBUTES\n} from \"./getActivity\";\n\nexport enum BoundType {\n  Min,\n  Max\n}\n\nexport class Filter {\n  public pendingHeartRateMin: string;\n  public pendingHeartRateMax: string;\n  public pendingCadenceMin: string;\n  public pendingCadenceMax: string;\n  public pendingSpeedMin: string;\n  public pendingSpeedMax: string;\n\n  private heartRate: [number, number];\n  private cadence: [number, number];\n  private speed: [number, number];\n\n  constructor(config: FilterConfig) {\n    this.pendingHeartRateMin = \"\" + config.heartRate[0];\n    this.pendingHeartRateMax = \"\" + config.heartRate[1];\n    this.pendingCadenceMin = \"\" + config.cadence[0];\n    this.pendingCadenceMax = \"\" + config.cadence[1];\n    this.pendingSpeedMin = \"\" + config.speed[0];\n    this.pendingSpeedMax = \"\" + config.speed[1];\n\n    this.heartRate = config.heartRate;\n    this.cadence = config.cadence;\n    this.speed = config.speed;\n  }\n\n  setPendingBound(\n    attribute: Attribute,\n    boundType: BoundType,\n    value: string\n  ): Filter {\n    const filter = new Filter(this.config());\n    const key = pendingKeyFromAttributeAndBoundType(attribute, boundType);\n    filter[key] = value as any;\n    return filter;\n  }\n\n  private config(): FilterConfig {\n    const { heartRate, cadence, speed } = this;\n    return { heartRate, cadence, speed };\n  }\n\n  syncPendingBoundsWithActualBounds(): Filter {\n    return new Filter({\n      heartRate: sync(\n        this.heartRate,\n        this.pendingHeartRateMin,\n        this.pendingHeartRateMax\n      ),\n      cadence: sync(\n        this.cadence,\n        this.pendingCadenceMin,\n        this.pendingCadenceMax\n      ),\n      speed: sync(this.speed, this.pendingSpeedMin, this.pendingSpeedMax)\n    });\n  }\n\n  isAttributeIllegal(attribute: Attribute, record: Record): boolean {\n    return !this.isAttributeLegal(attribute, record);\n  }\n\n  private isAttributeLegal(attribute: Attribute, record: Record): boolean {\n    const [min, max] = this.getBounds(attribute);\n    const value = getRecordAttribute(record, attribute);\n    return min <= value && value <= max;\n  }\n\n  isAnyAttributeIllegal(record: Record): boolean {\n    return ALL_ATTRIBUTES.some(attribute =>\n      this.isAttributeIllegal(attribute, record)\n    );\n  }\n\n  private getBounds(attribute: Attribute): [number, number] {\n    switch (attribute) {\n      case Attribute.HeartRate:\n        return this.heartRate;\n      case Attribute.Cadence:\n        return this.cadence;\n      case Attribute.Speed:\n        return this.speed;\n    }\n  }\n}\n\nfunction sync(\n  oldBounds: [number, number],\n  pendingMin: string,\n  pendingMax: string\n): [number, number] {\n  const parsedMin = strictParseInt(pendingMin);\n  const parsedMax = strictParseInt(pendingMax);\n  const newMin = isNaN(parsedMin) ? oldBounds[0] : parsedMin;\n  const newMax = isNaN(parsedMax) ? oldBounds[1] : parsedMax;\n  return [newMin, newMax];\n}\n\nfunction strictParseInt(value: string): number {\n  if (/^-?\\d*$/.test(value)) {\n    return parseInt(value, 10);\n  } else {\n    return NaN;\n  }\n}\n\ninterface FilterConfig {\n  heartRate: [number, number];\n  cadence: [number, number];\n  speed: [number, number];\n}\n\nfunction pendingKeyFromAttributeAndBoundType(\n  attribute: Attribute,\n  boundType: BoundType\n): keyof Filter {\n  const beginning = pendingKeyBeginningAttribute(attribute);\n  const ending = pendingKeyEndingFromBoundType(boundType);\n  return (beginning + ending) as keyof Filter;\n}\n\nfunction pendingKeyBeginningAttribute(attribute: Attribute): string {\n  switch (attribute) {\n    case Attribute.HeartRate:\n      return \"pendingHeartRate\";\n    case Attribute.Cadence:\n      return \"pendingCadence\";\n    case Attribute.Speed:\n      return \"pendingSpeed\";\n  }\n}\n\nfunction pendingKeyEndingFromBoundType(boundType: BoundType): string {\n  switch (boundType) {\n    case BoundType.Min:\n      return \"Min\";\n    case BoundType.Max:\n      return \"Max\";\n  }\n}\n","enum PromStatus {\n  Pending,\n  Fulfilled,\n  Rejected\n}\n\nexport default class Qprom<T> extends Promise<T> {\n  private status: PromStatus;\n  private value?: T;\n  private error?: any;\n  private updateListeners: (() => void)[];\n\n  static fromPromise<T>(prom: Promise<T>): Qprom<T> {\n    return new Qprom((resolve, reject) => {\n      prom.then(resolve);\n      prom.catch(reject);\n    }, true);\n  }\n\n  private constructor(\n    cb: (resolve: (val: T) => void, reject: (err: any) => void) => void,\n    shouldListen: boolean\n  ) {\n    super(cb);\n\n    this.status = PromStatus.Pending;\n    this.updateListeners = [];\n\n    if (shouldListen) {\n      super.then(val => {\n        this.status = PromStatus.Fulfilled;\n        this.value = val;\n        this.updateListeners.forEach(onUpdate => {\n          onUpdate();\n        });\n      });\n      super.catch(err => {\n        this.status = PromStatus.Rejected;\n        this.error = err;\n        this.updateListeners.forEach(onUpdate => {\n          onUpdate();\n        });\n      });\n    }\n  }\n\n  match<Pending, Fulfilled, Rejected>(matcher: {\n    pending: () => Pending;\n    fulfilled: (val: T) => Fulfilled;\n    rejected: (err: any) => Rejected;\n    onUpdate?: () => void;\n  }): Pending | Fulfilled | Rejected {\n    if (\"function\" === typeof matcher.onUpdate) {\n      this.updateListeners.push(matcher.onUpdate);\n    }\n\n    switch (this.status) {\n      case PromStatus.Pending:\n        return matcher.pending();\n      case PromStatus.Fulfilled:\n        return matcher.fulfilled(this.value!);\n      case PromStatus.Rejected:\n        return matcher.rejected(this.error);\n    }\n  }\n}\n","export default class Option<T> {\n  static some<T>(value: T): Option<T> {\n    const some = Object.create(Option.prototype);\n    some.isNone_ = false;\n    some.value = value;\n    return some;\n  }\n\n  static none() {\n    return NONE;\n  }\n\n  match<N, S>(matcher: { none: () => N; some: (value: T) => S }): N | S {\n    if (this.isNone()) {\n      return matcher.none();\n    } else {\n      return matcher.some((this as any).value);\n    }\n  }\n\n  isNone() {\n    return (this as any).isNone_;\n  }\n\n  isSome() {\n    return !this.isNone();\n  }\n\n  map<R>(mapper: (value: T) => R): Option<R> {\n    return this.match({\n      none: () => (this as unknown) as Option<R>,\n      some: value => Option.some(mapper(value))\n    });\n  }\n\n  unwrapOr<D>(defaultValue: D): T | D {\n    return this.match({\n      none: () => defaultValue,\n      some: value => value\n    });\n  }\n}\n\nconst NONE = (() => {\n  const none = Object.create(Option.prototype);\n  none.isNone_ = true;\n  return none;\n})();\n","import React from \"react\";\nimport \"./App.css\";\n\nimport ExpandButton from \"./components/ExpandButton\";\nimport Location from \"./components/Location\";\nimport SectionDivider from \"./components/SectionDivider\";\nimport Timeline from \"./components/Timeline\";\n\nimport { isOrIsAncestorOf, EasyFit } from \"./lib\";\n\nimport { BoundType, Filter } from \"./filter\";\nimport { getActivity, Activity, Attribute } from \"./getActivity\";\nimport {\n  getActivityRecords,\n  capitalizeFirstLetter,\n  dayOfWeekString,\n  monthString,\n  getTime,\n  getDurationFromMillis,\n  reverseGeocode,\n  lerpDate,\n  getOffsetIndex,\n  Address\n} from \"./helpers\";\nimport Option from \"./Option\";\nimport Qprom from \"./Qprom\";\n\nexport default class App extends React.Component<{}, AppState> {\n  private fileRef: React.RefObject<HTMLInputElement>;\n  private minimapRef: React.RefObject<HTMLDivElement>;\n\n  private onChangePendingHeartRateMin: (event: React.ChangeEvent) => void;\n  private onChangePendingHeartRateMax: (event: React.ChangeEvent) => void;\n  private onChangePendingCadenceMin: (event: React.ChangeEvent) => void;\n  private onChangePendingCadenceMax: (event: React.ChangeEvent) => void;\n  private onChangePendingSpeedMin: (event: React.ChangeEvent) => void;\n  private onChangePendingSpeedMax: (event: React.ChangeEvent) => void;\n\n  constructor(props: object) {\n    super(props);\n\n    this.state = {\n      activity: Option.none(),\n      mouseDownTarget: Option.none(),\n      filter: new Filter({\n        heartRate: [0, 200],\n        cadence: [0, 125],\n        speed: [0, 40]\n      })\n    };\n\n    this.fileRef = React.createRef();\n    this.minimapRef = React.createRef();\n\n    window.addEventListener(\"resize\", () => this.forceUpdate());\n    window.addEventListener(\"orientationchange\", () => this.forceUpdate());\n\n    this.forceUpdate = this.forceUpdate.bind(this);\n\n    this.handleUpload = this.handleUpload.bind(this);\n    this.toggleIsStartLocationTruncated = this.toggleIsStartLocationTruncated.bind(\n      this\n    );\n    this.toggleIsEndLocationTruncated = this.toggleIsEndLocationTruncated.bind(\n      this\n    );\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onSyncPendingBounds = this.onSyncPendingBounds.bind(this);\n\n    this.onChangePendingHeartRateMin = e =>\n      this.onChangePendingBound(Attribute.HeartRate, BoundType.Min, e);\n    this.onChangePendingHeartRateMax = e =>\n      this.onChangePendingBound(Attribute.HeartRate, BoundType.Max, e);\n    this.onChangePendingCadenceMin = e =>\n      this.onChangePendingBound(Attribute.Cadence, BoundType.Min, e);\n    this.onChangePendingCadenceMax = e =>\n      this.onChangePendingBound(Attribute.Cadence, BoundType.Max, e);\n    this.onChangePendingSpeedMin = e =>\n      this.onChangePendingBound(Attribute.Speed, BoundType.Min, e);\n    this.onChangePendingSpeedMax = e =>\n      this.onChangePendingBound(Attribute.Speed, BoundType.Max, e);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"App\"\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        onTouchMove={this.onTouchMove}\n        onTouchEnd={this.onTouchEnd}\n      >\n        {this.state.activity.match({\n          none: () => (\n            <label className=\"UploadButton\">\n              <input\n                type=\"file\"\n                accept=\"fit\"\n                onChange={this.handleUpload}\n                ref={this.fileRef}\n                style={{ display: \"none\" }}\n              />\n              Upload .fit file\n            </label>\n          ),\n          some: ({\n            activity,\n\n            startLocation,\n            isStartLocationTruncated,\n            endLocation,\n            isEndLocationTruncated,\n\n            offsetTime,\n            offsetIndex,\n            width\n          }) => {\n            const {\n              sport,\n              records,\n              total_elapsed_time,\n              start_time: startTime,\n              end_time: endTime\n            } = activity;\n\n            return (\n              <div className=\"ActivityView\">\n                <div className=\"Head\">\n                  <div className=\"Header\">\n                    {monthString(startTime.getMonth()) +\n                      \" \" +\n                      startTime.getDate() +\n                      \" \"}\n                    {startLocation.match({\n                      onUpdate: this.forceUpdate,\n                      pending: () => \"\",\n                      fulfilled: location => location.address.city + \" \",\n                      rejected: () => \"\"\n                    })}\n                    {capitalizeFirstLetter(sport)}\n                  </div>\n\n                  <div className=\"MinimapBackground\" ref={this.minimapRef}>\n                    <div\n                      className=\"MinimapForeground\"\n                      style={{\n                        width:\n                          (100 * (offsetTime.getTime() - startTime.getTime())) /\n                            (endTime.getTime() - startTime.getTime()) +\n                          \"%\"\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"Body\">\n                  <div className=\"ActivityOverview\">\n                    <div className=\"Entry\">\n                      Sport:{\" \"}\n                      <span className=\"Value\">\n                        {capitalizeFirstLetter(sport)}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      Date:{\" \"}\n                      <span className=\"Value\">\n                        {dayOfWeekString(startTime.getDay())}{\" \"}\n                        {startTime.getDate()}{\" \"}\n                        {monthString(startTime.getMonth())}{\" \"}\n                        {startTime.getFullYear()}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      Start location:{\" \"}\n                      <span className=\"Value\">\n                        {startLocation.match({\n                          pending: () => \"loading\",\n                          fulfilled: startLocation => (\n                            <>\n                              <ExpandButton\n                                isExpanded={!isStartLocationTruncated}\n                                onClick={this.toggleIsStartLocationTruncated}\n                              />\n                              <Location\n                                isTruncated={isStartLocationTruncated}\n                                location={startLocation}\n                              />\n                            </>\n                          ),\n                          rejected: err => {\n                            console.log(\"Error loading start location\", err);\n                            return \"Error loading location\";\n                          },\n                          onUpdate: this.forceUpdate\n                        })}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      End location:{\" \"}\n                      <span className=\"Value\">\n                        {endLocation.match({\n                          pending: () => \"loading\",\n                          fulfilled: endLocation => (\n                            <>\n                              <ExpandButton\n                                isExpanded={!isEndLocationTruncated}\n                                onClick={this.toggleIsEndLocationTruncated}\n                              />\n                              <Location\n                                isTruncated={isEndLocationTruncated}\n                                location={endLocation}\n                              />\n                            </>\n                          ),\n                          rejected: err => {\n                            console.log(\"Error loading start location\", err);\n                            return \"Error loading location\";\n                          },\n                          onUpdate: this.forceUpdate\n                        })}\n                      </span>\n                    </div>\n                    <div className=\"Entry\">\n                      Total duration:{\" \"}\n                      <span className=\"Value\">\n                        {getDurationFromMillis(total_elapsed_time)}\n                      </span>{\" \"}\n                      Start time:{\" \"}\n                      <span className=\"Value\">{getTime(startTime)}</span> End\n                      time: <span className=\"Value\">{getTime(endTime)}</span>\n                    </div>\n                  </div>\n\n                  <SectionDivider />\n\n                  <div className=\"TimelineContainer\">\n                    <Timeline\n                      attribute={Attribute.HeartRate}\n                      records={records}\n                      offsetIndex={offsetIndex}\n                      width={width}\n                      filter={this.state.filter}\n                    />\n                    <Timeline\n                      attribute={Attribute.Cadence}\n                      records={records}\n                      offsetIndex={offsetIndex}\n                      width={width}\n                      filter={this.state.filter}\n                    />\n                    <Timeline\n                      attribute={Attribute.Speed}\n                      records={records}\n                      offsetIndex={offsetIndex}\n                      width={width}\n                      filter={this.state.filter}\n                    />\n                  </div>\n\n                  <SectionDivider />\n\n                  <div className=\"FilterContainer\">\n                    <div className=\"Filter\">\n                      <div className=\"FilterAttribute\">Heart Rate</div>\n                      <label className=\"FilterMinLabel\">\n                        Min:{\" \"}\n                        <input\n                          className=\"FilterMin\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingHeartRateMin}\n                          onChange={this.onChangePendingHeartRateMin}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                      <label className=\"FilterMaxLabel\">\n                        Max:{\" \"}\n                        <input\n                          className=\"FilterMax\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingHeartRateMax}\n                          onChange={this.onChangePendingHeartRateMax}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                    </div>\n\n                    <div className=\"Filter\">\n                      <div className=\"FilterAttribute\">Cadence</div>\n                      <label className=\"FilterMinLabel\">\n                        Min:{\" \"}\n                        <input\n                          className=\"FilterMin\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingCadenceMin}\n                          onChange={this.onChangePendingCadenceMin}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                      <label className=\"FilterMaxLabel\">\n                        Max:{\" \"}\n                        <input\n                          className=\"FilterMax\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingCadenceMax}\n                          onChange={this.onChangePendingCadenceMax}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                    </div>\n\n                    <div className=\"Filter\">\n                      <div className=\"FilterAttribute\">Speed</div>\n                      <label className=\"FilterMinLabel\">\n                        Min:{\" \"}\n                        <input\n                          className=\"FilterMin\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingSpeedMin}\n                          onChange={this.onChangePendingSpeedMin}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                      <label className=\"FilterMaxLabel\">\n                        Max:{\" \"}\n                        <input\n                          className=\"FilterMax\"\n                          type=\"text\"\n                          pattern=\"\\d*\"\n                          value={this.state.filter.pendingSpeedMax}\n                          onChange={this.onChangePendingSpeedMax}\n                          onBlur={this.onSyncPendingBounds}\n                        />\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    );\n  }\n\n  handleUpload() {\n    const { files } = this.fileRef.current!;\n    if (files !== null && \"object\" === typeof files && files.length > 0) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.addEventListener(\"loadend\", () => {\n        if (reader.error) {\n          throw reader.error;\n        } else {\n          const buffer = reader.result as ArrayBuffer;\n          new EasyFit({\n            force: true,\n            speedUnit: \"km/h\",\n            lengthUnit: \"m\",\n            temperatureUnit: \"kelvin\",\n            elapsedRecordField: true,\n            mode: \"cascade\"\n          }).parse(buffer, (error: any, data: any) => {\n            if (error) {\n              throw error;\n            } else {\n              const firstSession = data.activity.sessions[0];\n              const records = getActivityRecords(data.activity);\n              const endRecord = records[records.length - 1];\n\n              const activity = getActivity(data);\n\n              this.setState({\n                activity: Option.some({\n                  activity,\n\n                  startLocation: Qprom.fromPromise(\n                    reverseGeocode(\n                      firstSession.start_position_lat,\n                      firstSession.start_position_long\n                    )\n                  ),\n                  isStartLocationTruncated: true,\n                  endLocation: Qprom.fromPromise(\n                    reverseGeocode(\n                      endRecord.position_lat,\n                      endRecord.position_long\n                    )\n                  ),\n                  isEndLocationTruncated: true,\n\n                  offsetTime: activity.start_time,\n                  offsetIndex: 0,\n                  width: STARTING_WIDTH\n                })\n              });\n            }\n          });\n        }\n      });\n      reader.readAsArrayBuffer(file);\n    }\n  }\n\n  toggleIsStartLocationTruncated() {\n    this.setState(state => ({\n      activity: state.activity.map(activity => ({\n        ...activity,\n        isStartLocationTruncated: !activity.isStartLocationTruncated\n      }))\n    }));\n  }\n\n  toggleIsEndLocationTruncated() {\n    this.setState(state => ({\n      activity: state.activity.map(activity => ({\n        ...activity,\n        isEndLocationTruncated: !activity.isEndLocationTruncated\n      }))\n    }));\n  }\n\n  onMouseDown(event: React.MouseEvent) {\n    this.setState({\n      mouseDownTarget: Option.some(event.target as Element)\n    });\n  }\n\n  onMouseUp() {\n    this.setState(state => ({\n      ...state,\n      mouseDownTarget: Option.none()\n    }));\n  }\n\n  onMouseMove(event: React.MouseEvent) {\n    if (this.isCursorDragged() && this.minimapRef && this.minimapRef.current) {\n      const rect = this.minimapRef.current.getBoundingClientRect();\n      const dx = event.clientX - rect.left;\n      const rawCompletionFactor = dx / rect.width;\n      const clampedCompletionFactor = Math.min(\n        1,\n        Math.max(0, rawCompletionFactor)\n      );\n      this.setState(state => ({\n        activity: state.activity.map(state => {\n          const offsetTime = lerpDate(\n            state.activity.start_time,\n            state.activity.end_time,\n            clampedCompletionFactor\n          );\n          return {\n            ...state,\n            offsetTime,\n            offsetIndex: getOffsetIndex(state.activity.records, offsetTime)\n          };\n        })\n      }));\n    }\n  }\n\n  isCursorDragged(): boolean {\n    const { minimapRef } = this;\n    return this.state.mouseDownTarget.match({\n      none: () => false,\n      some: target =>\n        !!(\n          minimapRef &&\n          minimapRef.current &&\n          isOrIsAncestorOf(minimapRef.current, target)\n        )\n    });\n  }\n\n  onTouchStart(event: React.TouchEvent) {\n    this.onMouseDown((event as unknown) as React.MouseEvent);\n  }\n\n  onTouchMove(event: React.TouchEvent) {\n    if (this.isCursorDragged() && this.minimapRef && this.minimapRef.current) {\n      const rect = this.minimapRef.current.getBoundingClientRect();\n      const dx = event.touches[0].clientX - rect.left;\n      const rawCompletionFactor = dx / rect.width;\n      const clampedCompletionFactor = Math.min(\n        1,\n        Math.max(0, rawCompletionFactor)\n      );\n      this.setState(state => ({\n        activity: state.activity.map(state => {\n          const offsetTime = lerpDate(\n            state.activity.start_time,\n            state.activity.end_time,\n            clampedCompletionFactor\n          );\n          return {\n            ...state,\n            offsetTime,\n            offsetIndex: getOffsetIndex(state.activity.records, offsetTime)\n          };\n        })\n      }));\n    }\n  }\n\n  onTouchEnd() {\n    this.onMouseUp();\n  }\n\n  onChangePendingBound(\n    attribute: Attribute,\n    boundType: BoundType,\n    event: React.ChangeEvent\n  ) {\n    this.setState({\n      filter: this.state.filter.setPendingBound(\n        attribute,\n        boundType,\n        (event.target as HTMLInputElement).value\n      )\n    });\n  }\n\n  onSyncPendingBounds() {\n    this.setState({\n      filter: this.state.filter.syncPendingBoundsWithActualBounds()\n    });\n  }\n}\n\ninterface AppState {\n  activity: Option<ActivityViewState>;\n  mouseDownTarget: Option<Element>;\n  filter: Filter;\n}\n\ninterface ActivityViewState {\n  activity: Activity;\n\n  startLocation: Qprom<Address>;\n  isStartLocationTruncated: boolean;\n  endLocation: Qprom<Address>;\n  isEndLocationTruncated: boolean;\n\n  offsetTime: Date;\n  offsetIndex: number;\n  width: number;\n}\n\nconst STARTING_WIDTH = 87;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}